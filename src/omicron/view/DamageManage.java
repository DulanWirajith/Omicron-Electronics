/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package omicron.view;

import Others.IDGenerator;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import jdk.nashorn.internal.objects.NativeArray;
import omicron.controller.BatchController;
import omicron.controller.BrandController;
import omicron.controller.CustomerController;
import omicron.controller.DamageController;
import omicron.controller.ItemController;
import omicron.model.Batch;
import omicron.model.Brand;
import omicron.model.Customer;
import omicron.model.Damage;
import omicron.model.Item;

/**
 *
 * @author Dulan
 */
public class DamageManage extends javax.swing.JFrame {

    int timeRun = 0;

    /**
     * Creates new form CustomerManagement
     */
    public DamageManage() {
        initComponents();
        getclock();
        omText_Qty4.setEditable(false);
        loadItemNames();
        loadDamageDate();
        loadDamageId();
        loadToPhysicalDamageTable();
        loadToInternalDamageTable();
        clearAll();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        homePanel = new javax.swing.JPanel();
        homeLabel = new javax.swing.JLabel();
        homeIconPanel = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        titlePanel = new javax.swing.JPanel();
        titleLabel = new javax.swing.JLabel();
        mainButtonPanel = new javax.swing.JPanel();
        closeButtonLabel = new javax.swing.JLabel();
        minimizeButtonLabel = new javax.swing.JLabel();
        tablePanel = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        omLabel_NewBatchId = new javax.swing.JLabel();
        omLabel_BatchId6 = new javax.swing.JLabel();
        omLabel_ItemName1 = new javax.swing.JLabel();
        omCombo_ItemName1 = new javax.swing.JComboBox<>();
        omLabel_ItemName2 = new javax.swing.JLabel();
        omCombo_ItemName2 = new javax.swing.JComboBox<>();
        omLabel_ItemName3 = new javax.swing.JLabel();
        omLabel_Qty1 = new javax.swing.JLabel();
        omText_Qty = new javax.swing.JTextField();
        omLabel_Qty2 = new javax.swing.JLabel();
        omLabel_itemDetailRemoveItem = new javax.swing.JLabel();
        omLabel_NewBatchId2 = new javax.swing.JLabel();
        omLabel_ItemName8 = new javax.swing.JLabel();
        omCombo_ItemName8 = new javax.swing.JComboBox<>();
        omLabel_NewBatchId4 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        InternalDamage = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        omLabel_NewBatchId1 = new javax.swing.JLabel();
        omLabel_BatchId7 = new javax.swing.JLabel();
        omLabel_ItemName4 = new javax.swing.JLabel();
        omCombo_ItemName4 = new javax.swing.JComboBox<>();
        omLabel_ItemName5 = new javax.swing.JLabel();
        omCombo_ItemName5 = new javax.swing.JComboBox<>();
        omLabel_ItemName6 = new javax.swing.JLabel();
        omLabel_Qty3 = new javax.swing.JLabel();
        omText_Qty2 = new javax.swing.JTextField();
        omLabel_Qty4 = new javax.swing.JLabel();
        omLabel_itemDetailRemoveItem1 = new javax.swing.JLabel();
        omLabel_Qty5 = new javax.swing.JLabel();
        omText_Qty4 = new javax.swing.JTextField();
        omLabel_NewBatchId3 = new javax.swing.JLabel();
        omLabel_ItemName7 = new javax.swing.JLabel();
        omCombo_ItemName7 = new javax.swing.JComboBox<>();
        omLabel_NewBatchId5 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        physicalDamage = new javax.swing.JTable();
        dateTimePanel = new javax.swing.JPanel();
        clock = new javax.swing.JLabel();
        MainLable = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        homePanel.setOpaque(false);

        homeLabel.setFont(new java.awt.Font("Lucida Bright", 3, 85)); // NOI18N
        homeLabel.setForeground(new java.awt.Color(255, 205, 200));
        homeLabel.setText("  O");

        javax.swing.GroupLayout homePanelLayout = new javax.swing.GroupLayout(homePanel);
        homePanel.setLayout(homePanelLayout);
        homePanelLayout.setHorizontalGroup(
            homePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(homeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
        );
        homePanelLayout.setVerticalGroup(
            homePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(homeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
        );

        getContentPane().add(homePanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 170, 130));

        homeIconPanel.setOpaque(false);

        jButton1.setFont(new java.awt.Font("Miriam Fixed", 1, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(0, 102, 102));
        jButton1.setText("Home");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout homeIconPanelLayout = new javax.swing.GroupLayout(homeIconPanel);
        homeIconPanel.setLayout(homeIconPanelLayout);
        homeIconPanelLayout.setHorizontalGroup(
            homeIconPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(homeIconPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        homeIconPanelLayout.setVerticalGroup(
            homeIconPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, homeIconPanelLayout.createSequentialGroup()
                .addContainerGap(495, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );

        getContentPane().add(homeIconPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 210, -1, 560));

        titlePanel.setOpaque(false);

        titleLabel.setFont(new java.awt.Font("Monotype Corsiva", 3, 48)); // NOI18N
        titleLabel.setForeground(new java.awt.Color(255, 255, 0));
        titleLabel.setText("Damage Management...");

        javax.swing.GroupLayout titlePanelLayout = new javax.swing.GroupLayout(titlePanel);
        titlePanel.setLayout(titlePanelLayout);
        titlePanelLayout.setHorizontalGroup(
            titlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(titlePanelLayout.createSequentialGroup()
                .addComponent(titleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 510, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        titlePanelLayout.setVerticalGroup(
            titlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(titlePanelLayout.createSequentialGroup()
                .addComponent(titleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        getContentPane().add(titlePanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 170, 510, 50));

        mainButtonPanel.setOpaque(false);

        closeButtonLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/omicron.images/close_64.png"))); // NOI18N
        closeButtonLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                closeButtonLabelMouseClicked(evt);
            }
        });

        minimizeButtonLabel.setIcon(new javax.swing.ImageIcon("D:\\IJSE\\Project\\First Sem Project\\Omicron\\Omicron\\Omicron_Electronics\\src\\omicron.images\\minimize_64.png")); // NOI18N
        minimizeButtonLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                minimizeButtonLabelMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout mainButtonPanelLayout = new javax.swing.GroupLayout(mainButtonPanel);
        mainButtonPanel.setLayout(mainButtonPanelLayout);
        mainButtonPanelLayout.setHorizontalGroup(
            mainButtonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainButtonPanelLayout.createSequentialGroup()
                .addGap(0, 13, Short.MAX_VALUE)
                .addComponent(minimizeButtonLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(closeButtonLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        mainButtonPanelLayout.setVerticalGroup(
            mainButtonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainButtonPanelLayout.createSequentialGroup()
                .addGroup(mainButtonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(closeButtonLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(minimizeButtonLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        getContentPane().add(mainButtonPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(1230, 0, 130, -1));

        tablePanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(153, 204, 255), new java.awt.Color(153, 255, 255), null, null));
        tablePanel.setOpaque(false);

        jPanel1.setOpaque(false);

        jPanel3.setOpaque(false);

        omLabel_NewBatchId.setBackground(new java.awt.Color(204, 204, 204));
        omLabel_NewBatchId.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        omLabel_NewBatchId.setMaximumSize(new java.awt.Dimension(100, 21));
        omLabel_NewBatchId.setMinimumSize(new java.awt.Dimension(50, 21));
        omLabel_NewBatchId.setOpaque(true);

        omLabel_BatchId6.setFont(new java.awt.Font("Tahoma", 0, 17)); // NOI18N
        omLabel_BatchId6.setForeground(new java.awt.Color(255, 255, 255));
        omLabel_BatchId6.setText("Damage ID");
        omLabel_BatchId6.setMaximumSize(new java.awt.Dimension(100, 21));
        omLabel_BatchId6.setMinimumSize(new java.awt.Dimension(50, 21));
        omLabel_BatchId6.setPreferredSize(new java.awt.Dimension(112, 23));

        omLabel_ItemName1.setFont(new java.awt.Font("Tahoma", 0, 17)); // NOI18N
        omLabel_ItemName1.setForeground(new java.awt.Color(255, 255, 255));
        omLabel_ItemName1.setText("Sub Item Name");
        omLabel_ItemName1.setMaximumSize(new java.awt.Dimension(93, 25));
        omLabel_ItemName1.setPreferredSize(new java.awt.Dimension(112, 23));

        omCombo_ItemName1.setBackground(new java.awt.Color(204, 204, 204));
        omCombo_ItemName1.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        omCombo_ItemName1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                omCombo_ItemName1ActionPerformed(evt);
            }
        });

        omLabel_ItemName2.setFont(new java.awt.Font("Tahoma", 0, 17)); // NOI18N
        omLabel_ItemName2.setForeground(new java.awt.Color(255, 255, 255));
        omLabel_ItemName2.setText("Batch Id");
        omLabel_ItemName2.setMaximumSize(new java.awt.Dimension(93, 25));
        omLabel_ItemName2.setPreferredSize(new java.awt.Dimension(112, 23));

        omCombo_ItemName2.setBackground(new java.awt.Color(204, 204, 204));
        omCombo_ItemName2.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        omCombo_ItemName2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                omCombo_ItemName2ActionPerformed(evt);
            }
        });

        omLabel_ItemName3.setFont(new java.awt.Font("Tahoma", 0, 17)); // NOI18N
        omLabel_ItemName3.setForeground(new java.awt.Color(255, 255, 255));
        omLabel_ItemName3.setText("Sub Item Code");
        omLabel_ItemName3.setMaximumSize(new java.awt.Dimension(93, 25));
        omLabel_ItemName3.setPreferredSize(new java.awt.Dimension(112, 23));

        omLabel_Qty1.setFont(new java.awt.Font("Tahoma", 0, 17)); // NOI18N
        omLabel_Qty1.setForeground(new java.awt.Color(255, 255, 255));
        omLabel_Qty1.setText("Serial Number");
        omLabel_Qty1.setMaximumSize(new java.awt.Dimension(93, 25));
        omLabel_Qty1.setMinimumSize(new java.awt.Dimension(93, 25));
        omLabel_Qty1.setPreferredSize(new java.awt.Dimension(112, 23));

        omText_Qty.setBackground(new java.awt.Color(204, 204, 204));
        omText_Qty.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        omText_Qty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                omText_QtyomLabel_QtyViewActionPerformed(evt);
            }
        });
        omText_Qty.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                omText_QtyKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                omText_QtyKeyReleased(evt);
            }
        });

        omLabel_Qty2.setFont(new java.awt.Font("Tahoma", 0, 17)); // NOI18N
        omLabel_Qty2.setForeground(new java.awt.Color(255, 255, 255));
        omLabel_Qty2.setText("Date");
        omLabel_Qty2.setMaximumSize(new java.awt.Dimension(93, 25));
        omLabel_Qty2.setMinimumSize(new java.awt.Dimension(93, 25));
        omLabel_Qty2.setPreferredSize(new java.awt.Dimension(112, 23));

        omLabel_itemDetailRemoveItem.setBackground(new java.awt.Color(0, 155, 255));
        omLabel_itemDetailRemoveItem.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        omLabel_itemDetailRemoveItem.setForeground(new java.awt.Color(255, 255, 255));
        omLabel_itemDetailRemoveItem.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        omLabel_itemDetailRemoveItem.setText("Confirm");
        omLabel_itemDetailRemoveItem.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        omLabel_itemDetailRemoveItem.setPreferredSize(new java.awt.Dimension(112, 23));
        omLabel_itemDetailRemoveItem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                omLabel_itemDetailRemoveItemMouseClicked(evt);
            }
        });

        omLabel_NewBatchId2.setBackground(new java.awt.Color(204, 204, 204));
        omLabel_NewBatchId2.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        omLabel_NewBatchId2.setMaximumSize(new java.awt.Dimension(100, 21));
        omLabel_NewBatchId2.setMinimumSize(new java.awt.Dimension(50, 21));
        omLabel_NewBatchId2.setOpaque(true);

        omLabel_ItemName8.setFont(new java.awt.Font("Tahoma", 0, 17)); // NOI18N
        omLabel_ItemName8.setForeground(new java.awt.Color(255, 255, 255));
        omLabel_ItemName8.setText("Item Name");
        omLabel_ItemName8.setMaximumSize(new java.awt.Dimension(93, 25));
        omLabel_ItemName8.setPreferredSize(new java.awt.Dimension(112, 23));

        omCombo_ItemName8.setBackground(new java.awt.Color(204, 204, 204));
        omCombo_ItemName8.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        omCombo_ItemName8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                omCombo_ItemName8ActionPerformed(evt);
            }
        });

        omLabel_NewBatchId4.setBackground(new java.awt.Color(204, 204, 204));
        omLabel_NewBatchId4.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        omLabel_NewBatchId4.setMaximumSize(new java.awt.Dimension(100, 21));
        omLabel_NewBatchId4.setMinimumSize(new java.awt.Dimension(50, 21));
        omLabel_NewBatchId4.setOpaque(true);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(omLabel_BatchId6, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(38, 38, 38)
                                .addComponent(omLabel_NewBatchId, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(174, 174, 174)
                                .addComponent(omLabel_itemDetailRemoveItem, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(omLabel_ItemName1, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(38, 38, 38)
                                .addComponent(omCombo_ItemName1, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(omLabel_ItemName3, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(omLabel_Qty1, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(omLabel_ItemName2, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                        .addGap(36, 36, 36)
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(omText_Qty, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(omLabel_NewBatchId2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGap(40, 40, 40)
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(omLabel_NewBatchId4, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(omCombo_ItemName2, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addComponent(omLabel_Qty2, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(omLabel_ItemName8, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(38, 38, 38)
                        .addComponent(omCombo_ItemName8, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(35, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(omLabel_BatchId6, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(omLabel_NewBatchId, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(omLabel_ItemName8, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(omCombo_ItemName8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(omLabel_ItemName1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(omCombo_ItemName1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(omLabel_ItemName3, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(omLabel_NewBatchId4, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(omLabel_ItemName2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(omCombo_ItemName2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(omLabel_Qty1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(omText_Qty, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(omLabel_Qty2, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE)
                        .addGap(2, 2, 2))
                    .addComponent(omLabel_NewBatchId2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addComponent(omLabel_itemDetailRemoveItem, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 255, 255)));
        jPanel4.setOpaque(false);

        InternalDamage.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Damage Id", "Batch Id", "Serial Number", "Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(InternalDamage);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 616, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(52, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(38, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Internal Damage Items", jPanel1);

        jPanel2.setOpaque(false);

        jPanel5.setOpaque(false);

        omLabel_NewBatchId1.setBackground(new java.awt.Color(204, 204, 204));
        omLabel_NewBatchId1.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        omLabel_NewBatchId1.setMaximumSize(new java.awt.Dimension(100, 21));
        omLabel_NewBatchId1.setMinimumSize(new java.awt.Dimension(50, 21));
        omLabel_NewBatchId1.setOpaque(true);

        omLabel_BatchId7.setFont(new java.awt.Font("Tahoma", 0, 17)); // NOI18N
        omLabel_BatchId7.setForeground(new java.awt.Color(255, 255, 255));
        omLabel_BatchId7.setText("Damage ID");
        omLabel_BatchId7.setMaximumSize(new java.awt.Dimension(100, 21));
        omLabel_BatchId7.setMinimumSize(new java.awt.Dimension(50, 21));
        omLabel_BatchId7.setPreferredSize(new java.awt.Dimension(112, 23));

        omLabel_ItemName4.setFont(new java.awt.Font("Tahoma", 0, 17)); // NOI18N
        omLabel_ItemName4.setForeground(new java.awt.Color(255, 255, 255));
        omLabel_ItemName4.setText("Sub Item Name");
        omLabel_ItemName4.setMaximumSize(new java.awt.Dimension(93, 25));
        omLabel_ItemName4.setPreferredSize(new java.awt.Dimension(112, 23));

        omCombo_ItemName4.setBackground(new java.awt.Color(204, 204, 204));
        omCombo_ItemName4.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        omCombo_ItemName4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                omCombo_ItemName4ActionPerformed(evt);
            }
        });

        omLabel_ItemName5.setFont(new java.awt.Font("Tahoma", 0, 17)); // NOI18N
        omLabel_ItemName5.setForeground(new java.awt.Color(255, 255, 255));
        omLabel_ItemName5.setText("Batch Id");
        omLabel_ItemName5.setMaximumSize(new java.awt.Dimension(93, 25));
        omLabel_ItemName5.setPreferredSize(new java.awt.Dimension(112, 23));

        omCombo_ItemName5.setBackground(new java.awt.Color(204, 204, 204));
        omCombo_ItemName5.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        omCombo_ItemName5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                omCombo_ItemName5ActionPerformed(evt);
            }
        });

        omLabel_ItemName6.setFont(new java.awt.Font("Tahoma", 0, 17)); // NOI18N
        omLabel_ItemName6.setForeground(new java.awt.Color(255, 255, 255));
        omLabel_ItemName6.setText("Sub Item Code");
        omLabel_ItemName6.setMaximumSize(new java.awt.Dimension(93, 25));
        omLabel_ItemName6.setPreferredSize(new java.awt.Dimension(112, 23));

        omLabel_Qty3.setFont(new java.awt.Font("Tahoma", 0, 17)); // NOI18N
        omLabel_Qty3.setForeground(new java.awt.Color(255, 255, 255));
        omLabel_Qty3.setText("Serial Number");
        omLabel_Qty3.setMaximumSize(new java.awt.Dimension(93, 25));
        omLabel_Qty3.setMinimumSize(new java.awt.Dimension(93, 25));
        omLabel_Qty3.setPreferredSize(new java.awt.Dimension(112, 23));

        omText_Qty2.setBackground(new java.awt.Color(204, 204, 204));
        omText_Qty2.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        omText_Qty2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                omText_Qty2omLabel_QtyViewActionPerformed(evt);
            }
        });
        omText_Qty2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                omText_Qty2KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                omText_Qty2KeyReleased(evt);
            }
        });

        omLabel_Qty4.setFont(new java.awt.Font("Tahoma", 0, 17)); // NOI18N
        omLabel_Qty4.setForeground(new java.awt.Color(255, 255, 255));
        omLabel_Qty4.setText("Date");
        omLabel_Qty4.setMaximumSize(new java.awt.Dimension(93, 25));
        omLabel_Qty4.setMinimumSize(new java.awt.Dimension(93, 25));
        omLabel_Qty4.setPreferredSize(new java.awt.Dimension(112, 23));

        omLabel_itemDetailRemoveItem1.setBackground(new java.awt.Color(0, 155, 255));
        omLabel_itemDetailRemoveItem1.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        omLabel_itemDetailRemoveItem1.setForeground(new java.awt.Color(255, 255, 255));
        omLabel_itemDetailRemoveItem1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        omLabel_itemDetailRemoveItem1.setText("Confirm");
        omLabel_itemDetailRemoveItem1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        omLabel_itemDetailRemoveItem1.setPreferredSize(new java.awt.Dimension(112, 23));
        omLabel_itemDetailRemoveItem1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                omLabel_itemDetailRemoveItem1MouseClicked(evt);
            }
        });

        omLabel_Qty5.setFont(new java.awt.Font("Tahoma", 0, 17)); // NOI18N
        omLabel_Qty5.setForeground(new java.awt.Color(255, 255, 255));
        omLabel_Qty5.setText("Amount");
        omLabel_Qty5.setMaximumSize(new java.awt.Dimension(93, 25));
        omLabel_Qty5.setMinimumSize(new java.awt.Dimension(93, 25));
        omLabel_Qty5.setPreferredSize(new java.awt.Dimension(112, 23));

        omText_Qty4.setBackground(new java.awt.Color(204, 204, 204));
        omText_Qty4.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        omText_Qty4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                omText_Qty4omLabel_QtyViewActionPerformed(evt);
            }
        });
        omText_Qty4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                omText_Qty4KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                omText_Qty4KeyReleased(evt);
            }
        });

        omLabel_NewBatchId3.setBackground(new java.awt.Color(204, 204, 204));
        omLabel_NewBatchId3.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        omLabel_NewBatchId3.setMaximumSize(new java.awt.Dimension(100, 21));
        omLabel_NewBatchId3.setMinimumSize(new java.awt.Dimension(50, 21));
        omLabel_NewBatchId3.setOpaque(true);

        omLabel_ItemName7.setFont(new java.awt.Font("Tahoma", 0, 17)); // NOI18N
        omLabel_ItemName7.setForeground(new java.awt.Color(255, 255, 255));
        omLabel_ItemName7.setText("Item Name");
        omLabel_ItemName7.setMaximumSize(new java.awt.Dimension(93, 25));
        omLabel_ItemName7.setPreferredSize(new java.awt.Dimension(112, 23));

        omCombo_ItemName7.setBackground(new java.awt.Color(204, 204, 204));
        omCombo_ItemName7.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        omCombo_ItemName7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                omCombo_ItemName7ActionPerformed(evt);
            }
        });

        omLabel_NewBatchId5.setBackground(new java.awt.Color(204, 204, 204));
        omLabel_NewBatchId5.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        omLabel_NewBatchId5.setMaximumSize(new java.awt.Dimension(100, 21));
        omLabel_NewBatchId5.setMinimumSize(new java.awt.Dimension(50, 21));
        omLabel_NewBatchId5.setOpaque(true);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(omLabel_itemDetailRemoveItem1, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(omLabel_BatchId7, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(38, 38, 38)
                                .addComponent(omLabel_NewBatchId1, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(2, 2, 2))))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(omLabel_Qty3, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(omLabel_ItemName5, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                        .addGap(40, 40, 40)
                                        .addComponent(omCombo_ItemName5, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                                        .addGap(38, 38, 38)
                                        .addComponent(omText_Qty2, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(omLabel_Qty4, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(omLabel_Qty5, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(38, 38, 38)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(omLabel_NewBatchId3, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(omText_Qty4, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(omLabel_ItemName7, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(38, 38, 38)
                                .addComponent(omCombo_ItemName7, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(omLabel_ItemName4, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(omLabel_ItemName6, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(38, 38, 38)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(omLabel_NewBatchId5, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(omCombo_ItemName4, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(35, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(omLabel_BatchId7, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(omLabel_NewBatchId1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(omLabel_ItemName7, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(omCombo_ItemName7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(omLabel_ItemName4, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(omCombo_ItemName4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(omLabel_ItemName6, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(omLabel_NewBatchId5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(omLabel_ItemName5, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(omCombo_ItemName5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(omLabel_Qty3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(omText_Qty2, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(omLabel_NewBatchId3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(omLabel_Qty4, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(omLabel_Qty5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(omText_Qty4, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(omLabel_itemDetailRemoveItem1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 255, 255)));
        jPanel6.setOpaque(false);

        physicalDamage.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Damage Id", "Batch Id", "Serial Number", "Date", "Amount"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(physicalDamage);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 616, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(39, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Physical Damage Items", jPanel2);

        javax.swing.GroupLayout tablePanelLayout = new javax.swing.GroupLayout(tablePanel);
        tablePanel.setLayout(tablePanelLayout);
        tablePanelLayout.setHorizontalGroup(
            tablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tablePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        tablePanelLayout.setVerticalGroup(
            tablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tablePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        getContentPane().add(tablePanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 240, 1160, 480));

        dateTimePanel.setOpaque(false);

        clock.setFont(new java.awt.Font("DS-Digital", 0, 60)); // NOI18N
        clock.setForeground(new java.awt.Color(0, 165, 255));
        clock.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        clock.setText("2:13:15  PM");

        javax.swing.GroupLayout dateTimePanelLayout = new javax.swing.GroupLayout(dateTimePanel);
        dateTimePanel.setLayout(dateTimePanelLayout);
        dateTimePanelLayout.setHorizontalGroup(
            dateTimePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dateTimePanelLayout.createSequentialGroup()
                .addComponent(clock, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
                .addContainerGap())
        );
        dateTimePanelLayout.setVerticalGroup(
            dateTimePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(clock, javax.swing.GroupLayout.PREFERRED_SIZE, 60, Short.MAX_VALUE)
        );

        getContentPane().add(dateTimePanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 30, 310, 60));

        MainLable.setIcon(new javax.swing.ImageIcon("D:\\IJSE\\Project\\First Sem Project\\Omicron\\Omicron\\Omicron_Electronics\\src\\omicron.images\\final.jpg")); // NOI18N
        MainLable.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        getContentPane().add(MainLable, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1370, 770));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void closeButtonLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeButtonLabelMouseClicked
        System.exit(0);
    }//GEN-LAST:event_closeButtonLabelMouseClicked

    private void omCombo_ItemName1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_omCombo_ItemName1ActionPerformed
        clearAll();
        if (omCombo_ItemName8.getSelectedItem().toString() != null) {
            setSubItemCodeAndBatchIds();
        }
    }//GEN-LAST:event_omCombo_ItemName1ActionPerformed

    private void omCombo_ItemName2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_omCombo_ItemName2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_omCombo_ItemName2ActionPerformed

    private void omText_QtyomLabel_QtyViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_omText_QtyomLabel_QtyViewActionPerformed

    }//GEN-LAST:event_omText_QtyomLabel_QtyViewActionPerformed

    private void omText_QtyKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_omText_QtyKeyPressed

    }//GEN-LAST:event_omText_QtyKeyPressed

    private void omText_QtyKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_omText_QtyKeyReleased

    }//GEN-LAST:event_omText_QtyKeyReleased

    private void omLabel_itemDetailRemoveItemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_omLabel_itemDetailRemoveItemMouseClicked
        confirmInternalDamages();
        loadToInternalDamageTable();
        loadDamageId();
        clearAll();
    }//GEN-LAST:event_omLabel_itemDetailRemoveItemMouseClicked

    private void omCombo_ItemName4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_omCombo_ItemName4ActionPerformed
        clearAll();
        if (omCombo_ItemName7.getSelectedItem().toString() != null) {
            setSubItemCodeAndBatchIdsPhy();
        }

    }//GEN-LAST:event_omCombo_ItemName4ActionPerformed

    private void omCombo_ItemName5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_omCombo_ItemName5ActionPerformed
        if (omCombo_ItemName4.getSelectedItem().toString() != null) {
            getBatchBuyingPrice();
        }
    }//GEN-LAST:event_omCombo_ItemName5ActionPerformed

    private void omText_Qty2omLabel_QtyViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_omText_Qty2omLabel_QtyViewActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_omText_Qty2omLabel_QtyViewActionPerformed

    private void omText_Qty2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_omText_Qty2KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_omText_Qty2KeyPressed

    private void omText_Qty2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_omText_Qty2KeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_omText_Qty2KeyReleased

    private void omLabel_itemDetailRemoveItem1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_omLabel_itemDetailRemoveItem1MouseClicked
        confirmPhysicalDamages();
        loadToPhysicalDamageTable();
        clearAll();
        loadDamageId();

    }//GEN-LAST:event_omLabel_itemDetailRemoveItem1MouseClicked

    private void omText_Qty4omLabel_QtyViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_omText_Qty4omLabel_QtyViewActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_omText_Qty4omLabel_QtyViewActionPerformed

    private void omText_Qty4KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_omText_Qty4KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_omText_Qty4KeyPressed

    private void omText_Qty4KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_omText_Qty4KeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_omText_Qty4KeyReleased

    private void omCombo_ItemName7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_omCombo_ItemName7ActionPerformed
        clearAll();
        loadSubItemNamesPhy();
    }//GEN-LAST:event_omCombo_ItemName7ActionPerformed

    private void omCombo_ItemName8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_omCombo_ItemName8ActionPerformed
        clearAll();
        loadSubItemNames();
    }//GEN-LAST:event_omCombo_ItemName8ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        new HomePage().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void minimizeButtonLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizeButtonLabelMouseClicked
        setState(ICONIFIED);
    }//GEN-LAST:event_minimizeButtonLabelMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DamageManage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DamageManage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DamageManage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DamageManage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DamageManage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable InternalDamage;
    private javax.swing.JLabel MainLable;
    private javax.swing.JLabel clock;
    private javax.swing.JLabel closeButtonLabel;
    private javax.swing.JPanel dateTimePanel;
    private javax.swing.JPanel homeIconPanel;
    private javax.swing.JLabel homeLabel;
    private javax.swing.JPanel homePanel;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JPanel mainButtonPanel;
    private javax.swing.JLabel minimizeButtonLabel;
    private javax.swing.JComboBox<String> omCombo_ItemName1;
    private javax.swing.JComboBox<String> omCombo_ItemName2;
    private javax.swing.JComboBox<String> omCombo_ItemName4;
    private javax.swing.JComboBox<String> omCombo_ItemName5;
    private javax.swing.JComboBox<String> omCombo_ItemName7;
    private javax.swing.JComboBox<String> omCombo_ItemName8;
    private javax.swing.JLabel omLabel_BatchId6;
    private javax.swing.JLabel omLabel_BatchId7;
    private javax.swing.JLabel omLabel_ItemName1;
    private javax.swing.JLabel omLabel_ItemName2;
    private javax.swing.JLabel omLabel_ItemName3;
    private javax.swing.JLabel omLabel_ItemName4;
    private javax.swing.JLabel omLabel_ItemName5;
    private javax.swing.JLabel omLabel_ItemName6;
    private javax.swing.JLabel omLabel_ItemName7;
    private javax.swing.JLabel omLabel_ItemName8;
    private javax.swing.JLabel omLabel_NewBatchId;
    private javax.swing.JLabel omLabel_NewBatchId1;
    private javax.swing.JLabel omLabel_NewBatchId2;
    private javax.swing.JLabel omLabel_NewBatchId3;
    private javax.swing.JLabel omLabel_NewBatchId4;
    private javax.swing.JLabel omLabel_NewBatchId5;
    private javax.swing.JLabel omLabel_Qty1;
    private javax.swing.JLabel omLabel_Qty2;
    private javax.swing.JLabel omLabel_Qty3;
    private javax.swing.JLabel omLabel_Qty4;
    private javax.swing.JLabel omLabel_Qty5;
    private javax.swing.JLabel omLabel_itemDetailRemoveItem;
    private javax.swing.JLabel omLabel_itemDetailRemoveItem1;
    private javax.swing.JTextField omText_Qty;
    private javax.swing.JTextField omText_Qty2;
    private javax.swing.JTextField omText_Qty4;
    private javax.swing.JTable physicalDamage;
    private javax.swing.JPanel tablePanel;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JPanel titlePanel;
    // End of variables declaration//GEN-END:variables

    private void getclock() {
        new Thread(new Runnable() {
            @Override
            public void run() {
                while (true) {
                    Date curDate = new Date();
                    SimpleDateFormat dateFormat = new SimpleDateFormat("hh:mm:ss aa");
                    String currentTime = dateFormat.format(curDate);

                    clock.setText(currentTime);
                    try {
                        Thread.sleep(1000);
                    } catch (InterruptedException ex) {
//                        JOptionPane.showMessageDialog(RoomDetails.this, "Database Error...");
                    }
                }
            }
        }).start();
    }

    private void setClearAll() {

    }

    private void loadDamageDate() {

        Date d1 = new Date(); //Current System date
        SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd");
        Calendar cal = Calendar.getInstance();
        String sDate = df.format(cal.getTime());
        omLabel_NewBatchId2.setText(sDate);
        omLabel_NewBatchId3.setText(sDate);
    }

    private void loadItemNames() {
        try {
            ArrayList<Brand> allBrandDetails = new ArrayList<Brand>();
            allBrandDetails = BrandController.showFromBrandTable();

            for (Brand brand : allBrandDetails) {
                omCombo_ItemName8.addItem(brand.getBrandName());
                omCombo_ItemName7.addItem(brand.getBrandName());
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(DamageManage.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(DamageManage.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "Error in your Inserted Data.. Please check again..");
            Logger.getLogger(GRNManagement.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(this, "Error in your Inserted Data.. Please check again..");
            Logger.getLogger(DamageManage.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void loadSubItemNames() {
        try {
            String brandName = (String) omCombo_ItemName8.getSelectedItem();
            String brandId = BrandController.getBrandId(brandName);
            omCombo_ItemName1.removeAllItems();
            ArrayList<Item> getItems = ItemController.getItemListToBrandId(brandId);
            for (Item item : getItems) {
//                omCombo_ItemName4.addItem(item.getItemName());
                omCombo_ItemName1.addItem(item.getItemName());

            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(DamageManage.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(DamageManage.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void setSubItemCodeAndBatchIds() {
        try {
            String itemName = (String) omCombo_ItemName1.getSelectedItem();
            String itemCode = ItemController.getItemCodeToItemName(itemName);
            omLabel_NewBatchId4.setText(itemCode);
            omLabel_NewBatchId5.setText(itemCode);

            ArrayList<Batch> getBatchIDs = BatchController.getAllBatchIdsToItemCode(itemCode);
            omCombo_ItemName2.removeAllItems();
            int fullBatchQty = 0;
            for (Batch batchID : getBatchIDs) {
                omCombo_ItemName2.addItem(batchID.getBatchId());
//                omCombo_ItemName5.addItem(batchID.getBatchId());
                fullBatchQty += batchID.getBatchQty();
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(DamageManage.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(DamageManage.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void getBatchBuyingPrice() {
        try {
            String batchId = (String) omCombo_ItemName5.getSelectedItem();
            if (batchId != null) {
                Batch batch = BatchController.getFromBatchTable(batchId);
                double batchBuyingPrice = batch.getBatchBuyingPrice();
                omText_Qty4.setText(Double.toString(batchBuyingPrice));
            }

        } catch (SQLException ex) {
            Logger.getLogger(DamageManage.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(DamageManage.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void loadDamageId() {
        try {
            String newDamageId = IDGenerator.getNewID("Damage", "damageId", "D");
            omLabel_NewBatchId.setText(newDamageId);
            omLabel_NewBatchId1.setText(newDamageId);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(DamageManage.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(DamageManage.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "Error in your Inserted Data.. Please check again..");
            Logger.getLogger(GRNManagement.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(this, "Error in your Inserted Data.. Please check again..");
            Logger.getLogger(DamageManage.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void confirmInternalDamages() {
        try {
            String batchId = (String) omCombo_ItemName2.getSelectedItem();
            String damageId = omLabel_NewBatchId.getText();
            String serial_num = omText_Qty.getText();
            String damageDate = omLabel_NewBatchId2.getText();
            double damageTotAmount = 0;
            String itemCode = omLabel_NewBatchId4.getText();
            Damage damage = new Damage(batchId, damageId, serial_num, damageDate, damageTotAmount, itemCode);

            boolean isAdded = DamageController.intoDamageTable(damage);
            if (isAdded) {
                JOptionPane.showMessageDialog(this, "Damage Added Successfully..");
            }
            loadDamageId();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(DamageManage.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error in your Inserted Data.. Please check again..");
            Logger.getLogger(DamageManage.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "Error in your Inserted Data.. Please check again..");
            Logger.getLogger(DamageManage.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(this, "Error in your Inserted Data.. Please check again..");
            Logger.getLogger(DamageManage.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void confirmPhysicalDamages() {
        try {
            String batchId = (String) omCombo_ItemName5.getSelectedItem();
            String damageId = omLabel_NewBatchId1.getText();
            String serial_num = omText_Qty2.getText();
            String damageDate = omLabel_NewBatchId3.getText();
            double damageTotAmount = Double.parseDouble(omText_Qty4.getText());
            String itemCode = omLabel_NewBatchId5.getText();
            Damage damage = new Damage(batchId, damageId, serial_num, damageDate, damageTotAmount, itemCode);

            boolean isAdded = DamageController.intoDamageTablefromPhysicalDamages(damage);
            if (isAdded) {
                JOptionPane.showMessageDialog(this, "Damage Added Successfully..");
            }
            loadDamageId();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(DamageManage.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error in your Inserted Data.. Please check again..");
            Logger.getLogger(DamageManage.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void loadSubItemNamesPhy() {
        try {
            String brandName = (String) omCombo_ItemName7.getSelectedItem();
            String brandId = BrandController.getBrandId(brandName);
            omCombo_ItemName4.removeAllItems();
            ArrayList<Item> getItems = ItemController.getItemListToBrandId(brandId);
            for (Item item : getItems) {
                omCombo_ItemName4.addItem(item.getItemName());
//                omCombo_ItemName1.addItem(item.getItemName());

            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(DamageManage.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(DamageManage.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void setSubItemCodeAndBatchIdsPhy() {
        try {
            String itemName = (String) omCombo_ItemName4.getSelectedItem();
            String itemCode = ItemController.getItemCodeToItemName(itemName);
            omLabel_NewBatchId4.setText(itemCode);
            omLabel_NewBatchId5.setText(itemCode);

            ArrayList<Batch> getBatchIDs = BatchController.getAllBatchIdsToItemCode(itemCode);
            omCombo_ItemName5.removeAllItems();
            int fullBatchQty = 0;
            for (Batch batchID : getBatchIDs) {
                omCombo_ItemName2.addItem(batchID.getBatchId());
                omCombo_ItemName5.addItem(batchID.getBatchId());
                fullBatchQty += batchID.getBatchQty();
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(DamageManage.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(DamageManage.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

//    private void getBatchBuyingPricePhy() {
//        try {
//            String batchId = (String) omCombo_ItemName5.getSelectedItem();
//            Batch batch = BatchController.getFromBatchTable(batchId);
//            double batchBuyingPrice = batch.getBatchBuyingPrice();
//            omText_Qty4.setText(Double.toString(batchBuyingPrice));
//        } catch (SQLException ex) {
//            Logger.getLogger(DamageManage.class.getName()).log(Level.SEVERE, null, ex);
//        } catch (ClassNotFoundException ex) {
//            Logger.getLogger(DamageManage.class.getName()).log(Level.SEVERE, null, ex);
//        } 
//    }
    private void loadToPhysicalDamageTable() {
        try {
            ArrayList<Damage> allDamages = DamageController.getFromDamageTableToPhysicalDamage();
//            DefaultTableModel defaultTableModelOne=(DefaultTableModel) InternalDamage.getModel();
//            defaultTableModelOne.setRowCount(0);
            DefaultTableModel defaultTableModelTwo = (DefaultTableModel) physicalDamage.getModel();
            defaultTableModelTwo.setRowCount(0);

            for (Damage damage : allDamages) {
                String damageId = damage.getDamageId();
                String batchId = damage.getBatchId();
                String serial_num = damage.getSerial_num();
                String date = damage.getDamageDate();
                double totAmount = damage.getDamageTotAmount();

//                Object[] rowDataOne={damageId,batchId,serial_num,date};
//                defaultTableModelOne.addRow(rowDataOne);
                Object[] rowDataTwo = {damageId, batchId, serial_num, date, totAmount};
                defaultTableModelTwo.addRow(rowDataTwo);

            }

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(DamageManage.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(DamageManage.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void loadToInternalDamageTable() {
        try {
            ArrayList<Damage> allDamages = DamageController.getFromDamageTableToInternalDamage();
            DefaultTableModel defaultTableModelOne = (DefaultTableModel) InternalDamage.getModel();
            defaultTableModelOne.setRowCount(0);
//            DefaultTableModel defaultTableModelTwo=(DefaultTableModel) physicalDamage.getModel();
//            defaultTableModelTwo.setRowCount(0);

            for (Damage damage : allDamages) {
                String damageId = damage.getDamageId();
                String batchId = damage.getBatchId();
                String serial_num = damage.getSerial_num();
                String date = damage.getDamageDate();
                double totAmount = damage.getDamageTotAmount();

                Object[] rowDataOne = {damageId, batchId, serial_num, date};
                defaultTableModelOne.addRow(rowDataOne);
//                Object[] rowDataTwo={damageId,batchId,serial_num,date,totAmount};
//                defaultTableModelTwo.se
//                
            }

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(DamageManage.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(DamageManage.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void clearAll() {
        omLabel_NewBatchId4.setText("");
        omText_Qty.setText("");
        omLabel_NewBatchId5.setText("");
        omText_Qty2.setText("");
        omText_Qty4.setText("");
    }
}
