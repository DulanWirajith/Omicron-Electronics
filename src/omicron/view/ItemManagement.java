/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package omicron.view;

import Others.IDGenerator;
import Others.ValidationController;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import omicron.controller.BrandController;
import omicron.controller.ItemController;
import omicron.controller.SupplierController;
import omicron.model.Brand;
import omicron.model.Item;
import omicron.model.Supplier;
import omicron.model.Supply_Order;

/**
 *
 * @author Dulan
 */
public class ItemManagement extends javax.swing.JFrame {

    int timeRun = 0;
    Supply_Order order;

    /**
     * Creates new form CustomerManagement
     */
    public ItemManagement() {
        initComponents();
        getclock();
        imAddLabelUpdateOrDelete.setVisible(false);
        showAllItems();
        imAddLabelGoBack.setVisible(false);
        loadBrandNames();
        setClearAll();
        loadSupplierIds();
        jLabel2.setVisible(false);
        jLabel4.setVisible(false);
        jLabel3.setVisible(false);
        jLabel1.setVisible(false);
        imText_ItemId.setEditable(false);
        setItemCode();
    }

    ItemManagement(Supply_Order order) {
        this.order = order;
        initComponents();
        getclock();
        imAddLabelUpdateOrDelete.setText("Add");
        imAddLabelUpdateOrDelete.setVisible(true);
        imAddLabelGoBack.setVisible(true);
        showAllItems();
        loadBrandNames();
        setClearAll();
        loadSupplierIds();
        jLabel2.setVisible(false);
        jLabel4.setVisible(false);
        jLabel3.setVisible(false);
        jLabel1.setVisible(false);
        imText_ItemId.setEditable(false);
        setItemCode();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        homePanel = new javax.swing.JPanel();
        homeLabel = new javax.swing.JLabel();
        homeIconPanel = new javax.swing.JPanel();
        titlePanel = new javax.swing.JPanel();
        titleLabel = new javax.swing.JLabel();
        mainButtonPanel = new javax.swing.JPanel();
        closeButtonLabel = new javax.swing.JLabel();
        minimizeButtonLabel = new javax.swing.JLabel();
        tablePanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        imAddTabel_View = new javax.swing.JTable();
        cmCustDetailPanel = new javax.swing.JPanel();
        cmAddPanell_Main = new javax.swing.JPanel();
        cmAddLabel_Main = new javax.swing.JLabel();
        cmAddPanel_GetDetail = new javax.swing.JPanel();
        cmAddLabel_CustId = new javax.swing.JLabel();
        imText_ItemId = new javax.swing.JTextField();
        cmAddLabel_CustName = new javax.swing.JLabel();
        imText_ItemName = new javax.swing.JTextField();
        imAddLabelUpdateOrDelete = new javax.swing.JLabel();
        cmAddLabel_CustName1 = new javax.swing.JLabel();
        cmAddLabel_CustName2 = new javax.swing.JLabel();
        cmAddLabel_CustName3 = new javax.swing.JLabel();
        imCombo_BrandName = new javax.swing.JComboBox<>();
        imLabelBrandId = new javax.swing.JLabel();
        imCombo_SupplierId = new javax.swing.JComboBox<>();
        imAddLabelGoBack = new javax.swing.JLabel();
        cmAddLabel_CustName4 = new javax.swing.JLabel();
        imLabelSupplierName = new javax.swing.JLabel();
        cmAddLabel_CustName5 = new javax.swing.JLabel();
        imText_ItemReOrder = new javax.swing.JTextField();
        cmCustMaintaimPanel = new javax.swing.JPanel();
        imLabel_AddItem = new javax.swing.JLabel();
        imLabel_DeleteItem = new javax.swing.JLabel();
        imLabel_SearchItem = new javax.swing.JLabel();
        imLabel_UpdateItem = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        dateTimePanel = new javax.swing.JPanel();
        clock = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        MainLable = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        homePanel.setOpaque(false);

        homeLabel.setFont(new java.awt.Font("Lucida Bright", 3, 85)); // NOI18N
        homeLabel.setForeground(new java.awt.Color(255, 205, 200));
        homeLabel.setText("  O");

        javax.swing.GroupLayout homePanelLayout = new javax.swing.GroupLayout(homePanel);
        homePanel.setLayout(homePanelLayout);
        homePanelLayout.setHorizontalGroup(
            homePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(homeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
        );
        homePanelLayout.setVerticalGroup(
            homePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(homeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
        );

        getContentPane().add(homePanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 170, 130));

        homeIconPanel.setOpaque(false);

        javax.swing.GroupLayout homeIconPanelLayout = new javax.swing.GroupLayout(homeIconPanel);
        homeIconPanel.setLayout(homeIconPanelLayout);
        homeIconPanelLayout.setHorizontalGroup(
            homeIconPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        homeIconPanelLayout.setVerticalGroup(
            homeIconPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 560, Short.MAX_VALUE)
        );

        getContentPane().add(homeIconPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 210, -1, 560));

        titlePanel.setOpaque(false);

        titleLabel.setFont(new java.awt.Font("Monotype Corsiva", 3, 48)); // NOI18N
        titleLabel.setForeground(new java.awt.Color(255, 255, 0));
        titleLabel.setText("Sub Item Management...");

        javax.swing.GroupLayout titlePanelLayout = new javax.swing.GroupLayout(titlePanel);
        titlePanel.setLayout(titlePanelLayout);
        titlePanelLayout.setHorizontalGroup(
            titlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(titlePanelLayout.createSequentialGroup()
                .addComponent(titleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 510, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        titlePanelLayout.setVerticalGroup(
            titlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(titlePanelLayout.createSequentialGroup()
                .addComponent(titleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        getContentPane().add(titlePanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 170, 510, 50));

        mainButtonPanel.setOpaque(false);

        closeButtonLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/omicron.images/close_64.png"))); // NOI18N
        closeButtonLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                closeButtonLabelMouseClicked(evt);
            }
        });

        minimizeButtonLabel.setIcon(new javax.swing.ImageIcon("D:\\IJSE\\Project\\First Sem Project\\Omicron\\Omicron\\Omicron_Electronics\\src\\omicron.images\\minimize_64.png")); // NOI18N
        minimizeButtonLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                minimizeButtonLabelMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout mainButtonPanelLayout = new javax.swing.GroupLayout(mainButtonPanel);
        mainButtonPanel.setLayout(mainButtonPanelLayout);
        mainButtonPanelLayout.setHorizontalGroup(
            mainButtonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainButtonPanelLayout.createSequentialGroup()
                .addGap(0, 13, Short.MAX_VALUE)
                .addComponent(minimizeButtonLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(closeButtonLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        mainButtonPanelLayout.setVerticalGroup(
            mainButtonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainButtonPanelLayout.createSequentialGroup()
                .addGroup(mainButtonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(closeButtonLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(minimizeButtonLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        getContentPane().add(mainButtonPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(1230, 0, 130, -1));

        tablePanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(153, 204, 255), new java.awt.Color(153, 255, 255), null, null));
        tablePanel.setOpaque(false);

        imAddTabel_View.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sub Item Code", "Sub Item Name", "Item Name", "Item  Id", "Supplier Id", "Re-Order Level"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        imAddTabel_View.setOpaque(false);
        jScrollPane1.setViewportView(imAddTabel_View);

        javax.swing.GroupLayout tablePanelLayout = new javax.swing.GroupLayout(tablePanel);
        tablePanel.setLayout(tablePanelLayout);
        tablePanelLayout.setHorizontalGroup(
            tablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 646, Short.MAX_VALUE)
        );
        tablePanelLayout.setVerticalGroup(
            tablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 326, Short.MAX_VALUE)
        );

        getContentPane().add(tablePanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 250, 650, 330));

        cmCustDetailPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        cmCustDetailPanel.setOpaque(false);
        cmCustDetailPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        cmAddPanell_Main.setBackground(new java.awt.Color(255, 0, 153));
        cmAddPanell_Main.setOpaque(false);

        cmAddLabel_Main.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        cmAddLabel_Main.setForeground(new java.awt.Color(255, 255, 255));
        cmAddLabel_Main.setText("Sub Item Details");

        javax.swing.GroupLayout cmAddPanell_MainLayout = new javax.swing.GroupLayout(cmAddPanell_Main);
        cmAddPanell_Main.setLayout(cmAddPanell_MainLayout);
        cmAddPanell_MainLayout.setHorizontalGroup(
            cmAddPanell_MainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cmAddPanell_MainLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cmAddLabel_Main, javax.swing.GroupLayout.DEFAULT_SIZE, 420, Short.MAX_VALUE)
                .addContainerGap())
        );
        cmAddPanell_MainLayout.setVerticalGroup(
            cmAddPanell_MainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(cmAddLabel_Main, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
        );

        cmCustDetailPanel.add(cmAddPanell_Main, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 440, 50));

        cmAddPanel_GetDetail.setOpaque(false);

        cmAddLabel_CustId.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        cmAddLabel_CustId.setForeground(new java.awt.Color(255, 255, 255));
        cmAddLabel_CustId.setText("Sub Item Code");

        imText_ItemId.setBackground(new java.awt.Color(204, 204, 204));
        imText_ItemId.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        imText_ItemId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                imText_ItemIdActionPerformed(evt);
            }
        });

        cmAddLabel_CustName.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        cmAddLabel_CustName.setForeground(new java.awt.Color(255, 255, 255));
        cmAddLabel_CustName.setText("Sub Item Name");

        imText_ItemName.setBackground(new java.awt.Color(204, 204, 204));
        imText_ItemName.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        imText_ItemName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                imText_ItemNameActionPerformed(evt);
            }
        });

        imAddLabelUpdateOrDelete.setBackground(new java.awt.Color(0, 165, 255));
        imAddLabelUpdateOrDelete.setFont(new java.awt.Font("Sylfaen", 3, 24)); // NOI18N
        imAddLabelUpdateOrDelete.setForeground(new java.awt.Color(255, 255, 255));
        imAddLabelUpdateOrDelete.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        imAddLabelUpdateOrDelete.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        imAddLabelUpdateOrDelete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                imAddLabelUpdateOrDeleteMouseClicked(evt);
            }
        });

        cmAddLabel_CustName1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        cmAddLabel_CustName1.setForeground(new java.awt.Color(255, 255, 255));
        cmAddLabel_CustName1.setText("Item Name");

        cmAddLabel_CustName2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        cmAddLabel_CustName2.setForeground(new java.awt.Color(255, 255, 255));
        cmAddLabel_CustName2.setText("Item ID");

        cmAddLabel_CustName3.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        cmAddLabel_CustName3.setForeground(new java.awt.Color(255, 255, 255));
        cmAddLabel_CustName3.setText("Supplier Id");

        imCombo_BrandName.setBackground(new java.awt.Color(204, 204, 204));
        imCombo_BrandName.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        imCombo_BrandName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                imCombo_BrandNameActionPerformed(evt);
            }
        });

        imLabelBrandId.setBackground(new java.awt.Color(204, 204, 204));
        imLabelBrandId.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        imLabelBrandId.setOpaque(true);

        imCombo_SupplierId.setBackground(new java.awt.Color(204, 204, 204));
        imCombo_SupplierId.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        imCombo_SupplierId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                imCombo_SupplierIdActionPerformed(evt);
            }
        });

        imAddLabelGoBack.setBackground(new java.awt.Color(0, 165, 255));
        imAddLabelGoBack.setFont(new java.awt.Font("Sylfaen", 3, 21)); // NOI18N
        imAddLabelGoBack.setForeground(new java.awt.Color(255, 255, 255));
        imAddLabelGoBack.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        imAddLabelGoBack.setText("<< Go Back");
        imAddLabelGoBack.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        imAddLabelGoBack.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                imAddLabelGoBackMouseClicked(evt);
            }
        });

        cmAddLabel_CustName4.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        cmAddLabel_CustName4.setForeground(new java.awt.Color(255, 255, 255));
        cmAddLabel_CustName4.setText("Supplier Name");

        imLabelSupplierName.setBackground(new java.awt.Color(204, 204, 204));
        imLabelSupplierName.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        imLabelSupplierName.setOpaque(true);

        cmAddLabel_CustName5.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        cmAddLabel_CustName5.setForeground(new java.awt.Color(255, 255, 255));
        cmAddLabel_CustName5.setText("Re-Order level");

        imText_ItemReOrder.setBackground(new java.awt.Color(204, 204, 204));
        imText_ItemReOrder.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        imText_ItemReOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                imText_ItemReOrderActionPerformed(evt);
            }
        });
        imText_ItemReOrder.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                imText_ItemReOrderKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                imText_ItemReOrderKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout cmAddPanel_GetDetailLayout = new javax.swing.GroupLayout(cmAddPanel_GetDetail);
        cmAddPanel_GetDetail.setLayout(cmAddPanel_GetDetailLayout);
        cmAddPanel_GetDetailLayout.setHorizontalGroup(
            cmAddPanel_GetDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cmAddPanel_GetDetailLayout.createSequentialGroup()
                .addGroup(cmAddPanel_GetDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(cmAddPanel_GetDetailLayout.createSequentialGroup()
                        .addGroup(cmAddPanel_GetDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(cmAddPanel_GetDetailLayout.createSequentialGroup()
                                .addGap(170, 170, 170)
                                .addComponent(imAddLabelGoBack, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(imAddLabelUpdateOrDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(cmAddPanel_GetDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, cmAddPanel_GetDetailLayout.createSequentialGroup()
                                    .addComponent(cmAddLabel_CustName3, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(imCombo_SupplierId, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, cmAddPanel_GetDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(cmAddPanel_GetDetailLayout.createSequentialGroup()
                                        .addComponent(cmAddLabel_CustId, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(imText_ItemId, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(cmAddPanel_GetDetailLayout.createSequentialGroup()
                                        .addComponent(cmAddLabel_CustName, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(imText_ItemName, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, cmAddPanel_GetDetailLayout.createSequentialGroup()
                                    .addGroup(cmAddPanel_GetDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(cmAddLabel_CustName1, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(cmAddLabel_CustName2, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(cmAddPanel_GetDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(imLabelBrandId, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(imCombo_BrandName, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, cmAddPanel_GetDetailLayout.createSequentialGroup()
                        .addComponent(cmAddLabel_CustName4, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(imLabelSupplierName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, cmAddPanel_GetDetailLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(cmAddLabel_CustName5, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(imText_ItemReOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)))
                .addContainerGap())
        );
        cmAddPanel_GetDetailLayout.setVerticalGroup(
            cmAddPanel_GetDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cmAddPanel_GetDetailLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(cmAddPanel_GetDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmAddLabel_CustId)
                    .addComponent(imText_ItemId, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(cmAddPanel_GetDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(imText_ItemName, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmAddLabel_CustName))
                .addGap(18, 18, 18)
                .addGroup(cmAddPanel_GetDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cmAddLabel_CustName1)
                    .addComponent(imCombo_BrandName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(cmAddPanel_GetDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cmAddLabel_CustName2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(imLabelBrandId, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(cmAddPanel_GetDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmAddLabel_CustName3)
                    .addComponent(imCombo_SupplierId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(cmAddPanel_GetDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cmAddLabel_CustName4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(imLabelSupplierName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(cmAddPanel_GetDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(imText_ItemReOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmAddLabel_CustName5))
                .addGap(31, 31, 31)
                .addGroup(cmAddPanel_GetDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(imAddLabelUpdateOrDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(imAddLabelGoBack, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        cmCustDetailPanel.add(cmAddPanel_GetDetail, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 450, 460));

        getContentPane().add(cmCustDetailPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 170, 470, 530));

        cmCustMaintaimPanel.setOpaque(false);

        imLabel_AddItem.setIcon(new javax.swing.ImageIcon("D:\\IJSE\\Project\\First Sem Project\\Omicron\\Omicron\\Omicron_Electronics\\src\\omicron.images\\itemAdd.png")); // NOI18N
        imLabel_AddItem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                imLabel_AddItemMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                imLabel_AddItemMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                imLabel_AddItemMouseExited(evt);
            }
        });

        imLabel_DeleteItem.setIcon(new javax.swing.ImageIcon("D:\\IJSE\\Project\\First Sem Project\\Omicron\\Omicron\\Omicron_Electronics\\src\\omicron.images\\itemRemove.png")); // NOI18N
        imLabel_DeleteItem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                imLabel_DeleteItemMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                imLabel_DeleteItemMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                imLabel_DeleteItemMouseExited(evt);
            }
        });

        imLabel_SearchItem.setIcon(new javax.swing.ImageIcon("D:\\IJSE\\Project\\First Sem Project\\Omicron\\Omicron\\Omicron_Electronics\\src\\omicron.images\\itemSerch.png")); // NOI18N
        imLabel_SearchItem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                imLabel_SearchItemMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                imLabel_SearchItemMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                imLabel_SearchItemMouseExited(evt);
            }
        });

        imLabel_UpdateItem.setIcon(new javax.swing.ImageIcon("D:\\IJSE\\Project\\First Sem Project\\Omicron\\Omicron\\Omicron_Electronics\\src\\omicron.images\\itemUpdate.png")); // NOI18N
        imLabel_UpdateItem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                imLabel_UpdateItemMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                imLabel_UpdateItemMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                imLabel_UpdateItemMouseExited(evt);
            }
        });

        jLabel2.setBackground(new java.awt.Color(204, 255, 204));
        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 102, 102));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Add");
        jLabel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setBackground(new java.awt.Color(204, 255, 204));
        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 102, 102));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Search");
        jLabel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel3.setBackground(new java.awt.Color(204, 255, 204));
        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 102, 102));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Delete");
        jLabel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel4.setBackground(new java.awt.Color(204, 255, 204));
        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 102, 102));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Update");
        jLabel4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout cmCustMaintaimPanelLayout = new javax.swing.GroupLayout(cmCustMaintaimPanel);
        cmCustMaintaimPanel.setLayout(cmCustMaintaimPanelLayout);
        cmCustMaintaimPanelLayout.setHorizontalGroup(
            cmCustMaintaimPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cmCustMaintaimPanelLayout.createSequentialGroup()
                .addGroup(cmCustMaintaimPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(imLabel_AddItem)
                    .addComponent(imLabel_DeleteItem)
                    .addComponent(imLabel_SearchItem)
                    .addComponent(imLabel_UpdateItem)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        cmCustMaintaimPanelLayout.setVerticalGroup(
            cmCustMaintaimPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cmCustMaintaimPanelLayout.createSequentialGroup()
                .addComponent(imLabel_AddItem)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(imLabel_SearchItem)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addComponent(imLabel_DeleteItem)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(imLabel_UpdateItem)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(35, Short.MAX_VALUE))
        );

        getContentPane().add(cmCustMaintaimPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(1280, 180, 80, 550));

        dateTimePanel.setOpaque(false);

        clock.setFont(new java.awt.Font("DS-Digital", 0, 60)); // NOI18N
        clock.setForeground(new java.awt.Color(0, 165, 255));
        clock.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        clock.setText("2:13:15  PM");

        javax.swing.GroupLayout dateTimePanelLayout = new javax.swing.GroupLayout(dateTimePanel);
        dateTimePanel.setLayout(dateTimePanelLayout);
        dateTimePanelLayout.setHorizontalGroup(
            dateTimePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dateTimePanelLayout.createSequentialGroup()
                .addComponent(clock, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
                .addContainerGap())
        );
        dateTimePanelLayout.setVerticalGroup(
            dateTimePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(clock, javax.swing.GroupLayout.PREFERRED_SIZE, 60, Short.MAX_VALUE)
        );

        getContentPane().add(dateTimePanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 30, 310, 60));

        jButton2.setFont(new java.awt.Font("Miriam Fixed", 1, 18)); // NOI18N
        jButton2.setForeground(new java.awt.Color(0, 102, 102));
        jButton2.setText("Home");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(593, 690, 140, 40));

        MainLable.setIcon(new javax.swing.ImageIcon("D:\\IJSE\\Project\\First Sem Project\\Omicron\\Omicron\\Omicron_Electronics\\src\\omicron.images\\final.jpg")); // NOI18N
        MainLable.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        getContentPane().add(MainLable, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1370, 770));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void closeButtonLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeButtonLabelMouseClicked
        System.exit(0);
    }//GEN-LAST:event_closeButtonLabelMouseClicked

    private void imText_ItemIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imText_ItemIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_imText_ItemIdActionPerformed

    private void imText_ItemNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imText_ItemNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_imText_ItemNameActionPerformed

    private void imAddLabelUpdateOrDeleteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_imAddLabelUpdateOrDeleteMouseClicked
        String text = imAddLabelUpdateOrDelete.getText();
        if (text.equals("Update")) {

            modifyInItemTable();

        } else if (text.equals("Delete")) {

            removeFromItemTable();

        } else if (text.equals("Add")) {

            intoItemTable();

        }
        setClearAll();
        showAllItems();
        setItemCode();
    }//GEN-LAST:event_imAddLabelUpdateOrDeleteMouseClicked

    private void imCombo_BrandNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imCombo_BrandNameActionPerformed
        getBrandId();
    }//GEN-LAST:event_imCombo_BrandNameActionPerformed

    private void imCombo_SupplierIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imCombo_SupplierIdActionPerformed
        if (imCombo_BrandName.getSelectedItem().toString() != null) {
            getSupplierName();
        }
    }//GEN-LAST:event_imCombo_SupplierIdActionPerformed

    private void imAddLabelGoBackMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_imAddLabelGoBackMouseClicked
        new SupplierOrderManagement(order).setVisible(true);
    }//GEN-LAST:event_imAddLabelGoBackMouseClicked

    private void imLabel_UpdateItemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_imLabel_UpdateItemMouseClicked
        setClearAll();
        imAddLabelUpdateOrDelete.setText("Update");
        imAddLabelUpdateOrDelete.setVisible(true);

        getFromItemTable();
    }//GEN-LAST:event_imLabel_UpdateItemMouseClicked

    private void imLabel_SearchItemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_imLabel_SearchItemMouseClicked
        setClearAll();
        imAddLabelUpdateOrDelete.setText("OK");
        imAddLabelUpdateOrDelete.setVisible(true);
        getFromItemTable();
    }//GEN-LAST:event_imLabel_SearchItemMouseClicked

    private void imLabel_DeleteItemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_imLabel_DeleteItemMouseClicked
        setClearAll();
        imAddLabelUpdateOrDelete.setText("Delete");
        imAddLabelUpdateOrDelete.setVisible(true);
        getFromItemTable();
    }//GEN-LAST:event_imLabel_DeleteItemMouseClicked

    private void imLabel_AddItemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_imLabel_AddItemMouseClicked
        setClearAll();
        setItemCode();
        imAddLabelUpdateOrDelete.setText("Add");
        imAddLabelUpdateOrDelete.setVisible(true);
    }//GEN-LAST:event_imLabel_AddItemMouseClicked

    private void imLabel_AddItemMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_imLabel_AddItemMouseEntered
        jLabel2.setVisible(true);
    }//GEN-LAST:event_imLabel_AddItemMouseEntered

    private void imLabel_AddItemMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_imLabel_AddItemMouseExited
        jLabel2.setVisible(false);

    }//GEN-LAST:event_imLabel_AddItemMouseExited

    private void imLabel_SearchItemMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_imLabel_SearchItemMouseEntered
        jLabel1.setVisible(true);
    }//GEN-LAST:event_imLabel_SearchItemMouseEntered

    private void imLabel_SearchItemMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_imLabel_SearchItemMouseExited
        jLabel1.setVisible(false);
    }//GEN-LAST:event_imLabel_SearchItemMouseExited

    private void imLabel_DeleteItemMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_imLabel_DeleteItemMouseEntered
        jLabel3.setVisible(true);
    }//GEN-LAST:event_imLabel_DeleteItemMouseEntered

    private void imLabel_DeleteItemMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_imLabel_DeleteItemMouseExited
        jLabel3.setVisible(false);
    }//GEN-LAST:event_imLabel_DeleteItemMouseExited

    private void imLabel_UpdateItemMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_imLabel_UpdateItemMouseEntered
        jLabel4.setVisible(true);
    }//GEN-LAST:event_imLabel_UpdateItemMouseEntered

    private void imLabel_UpdateItemMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_imLabel_UpdateItemMouseExited
        jLabel4.setVisible(false);
    }//GEN-LAST:event_imLabel_UpdateItemMouseExited

    private void imText_ItemReOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imText_ItemReOrderActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_imText_ItemReOrderActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        new HomePage().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void imText_ItemReOrderKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_imText_ItemReOrderKeyPressed
        ValidationController.numberOnly(imText_ItemReOrder);
    }//GEN-LAST:event_imText_ItemReOrderKeyPressed

    private void imText_ItemReOrderKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_imText_ItemReOrderKeyReleased
        ValidationController.numberOnly(imText_ItemReOrder);
    }//GEN-LAST:event_imText_ItemReOrderKeyReleased

    private void minimizeButtonLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizeButtonLabelMouseClicked
        setState(ICONIFIED);
    }//GEN-LAST:event_minimizeButtonLabelMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ItemManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ItemManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ItemManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ItemManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ItemManagement().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel MainLable;
    private javax.swing.JLabel clock;
    private javax.swing.JLabel closeButtonLabel;
    private javax.swing.JLabel cmAddLabel_CustId;
    private javax.swing.JLabel cmAddLabel_CustName;
    private javax.swing.JLabel cmAddLabel_CustName1;
    private javax.swing.JLabel cmAddLabel_CustName2;
    private javax.swing.JLabel cmAddLabel_CustName3;
    private javax.swing.JLabel cmAddLabel_CustName4;
    private javax.swing.JLabel cmAddLabel_CustName5;
    private javax.swing.JLabel cmAddLabel_Main;
    private javax.swing.JPanel cmAddPanel_GetDetail;
    private javax.swing.JPanel cmAddPanell_Main;
    private javax.swing.JPanel cmCustDetailPanel;
    private javax.swing.JPanel cmCustMaintaimPanel;
    private javax.swing.JPanel dateTimePanel;
    private javax.swing.JPanel homeIconPanel;
    private javax.swing.JLabel homeLabel;
    private javax.swing.JPanel homePanel;
    private javax.swing.JLabel imAddLabelGoBack;
    private javax.swing.JLabel imAddLabelUpdateOrDelete;
    private javax.swing.JTable imAddTabel_View;
    private javax.swing.JComboBox<String> imCombo_BrandName;
    private javax.swing.JComboBox<String> imCombo_SupplierId;
    private javax.swing.JLabel imLabelBrandId;
    private javax.swing.JLabel imLabelSupplierName;
    private javax.swing.JLabel imLabel_AddItem;
    private javax.swing.JLabel imLabel_DeleteItem;
    private javax.swing.JLabel imLabel_SearchItem;
    private javax.swing.JLabel imLabel_UpdateItem;
    private javax.swing.JTextField imText_ItemId;
    private javax.swing.JTextField imText_ItemName;
    private javax.swing.JTextField imText_ItemReOrder;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel mainButtonPanel;
    private javax.swing.JLabel minimizeButtonLabel;
    private javax.swing.JPanel tablePanel;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JPanel titlePanel;
    // End of variables declaration//GEN-END:variables

    private void getclock() {
        new Thread(new Runnable() {
            @Override
            public void run() {
                while (true) {
                    Date curDate = new Date();
                    SimpleDateFormat dateFormat = new SimpleDateFormat("hh:mm:ss aa");
                    String currentTime = dateFormat.format(curDate);

                    clock.setText(currentTime);
                    try {
                        Thread.sleep(1000);
                    } catch (InterruptedException ex) {
//                        JOptionPane.showMessageDialog(RoomDetails.this, "Database Error...");
                    }
                }
            }
        }).start();
    }

    private void setClearAll() {
        imText_ItemId.setText("");
        imText_ItemName.setText("");
        imCombo_BrandName.setSelectedItem("");
        imLabelBrandId.setText("");
        //imCombo_SupplierId.setText("");

    }

    private void showAllItems() {
        try {
            ArrayList<Item> allItemList = ItemController.showFromItemTable();
            DefaultTableModel defaultTableModel = (DefaultTableModel) imAddTabel_View.getModel();
            defaultTableModel.setRowCount(0);
            for (Item item : allItemList) {
                String brandName = BrandController.getBrandNameToShowAllItems(item.getBrandId());
                Object[] rowData = {item.getItemCode(), item.getItemName(), brandName, item.getBrandId(), item.getSupplierId(), item.getItemRe_OrderLevel()};
                defaultTableModel.addRow(rowData);
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ItemManagement.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(ItemManagement.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "Error in your Inserted Data.. Please check again..");
            Logger.getLogger(GRNManagement.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(this, "Error in your Inserted Data.. Please check again..");
            Logger.getLogger(DamageManage.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void loadBrandNames() {
        try {
            ArrayList<Brand> allBrandList = BrandController.loadBrandNames();
            for (Brand brand : allBrandList) {
                imCombo_BrandName.addItem(brand.getBrandName());
            }
        } catch (SQLException ex) {
            Logger.getLogger(ItemManagement.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ItemManagement.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "Error in your Inserted Data.. Please check again..");
            Logger.getLogger(GRNManagement.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(this, "Error in your Inserted Data.. Please check again..");
            Logger.getLogger(DamageManage.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void loadSupplierIds() {
        try {
            ArrayList<Supplier> supplierIds = SupplierController.getSupplierIdsToCombo();
            for (Supplier supplier : supplierIds) {
                imCombo_SupplierId.addItem(supplier.getSupplierId());
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ItemManagement.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(ItemManagement.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "Error in your Inserted Data.. Please check again..");
            Logger.getLogger(GRNManagement.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(this, "Error in your Inserted Data.. Please check again..");
            Logger.getLogger(DamageManage.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void getFromItemTable() {
        try {
            String itemCode = JOptionPane.showInputDialog(this, "Enter Sub Item Code First...");
            Item item = ItemController.getFromItemTable(itemCode);
            if (item != null) {
                Brand brand = BrandController.getFromBrandTable(item.getBrandId());
                String brandName = brand.getBrandName();
                imText_ItemId.setText(itemCode);
                imText_ItemName.setText(item.getItemName());
                imCombo_BrandName.setSelectedItem(brandName);
                imLabelBrandId.setText(item.getBrandId());
                imCombo_SupplierId.setSelectedItem(item.getSupplierId());
                imText_ItemReOrder.setText(Integer.toString(item.getItemRe_OrderLevel()));
            } else {
                JOptionPane.showMessageDialog(this, "No Item Found in " + itemCode + " ItemCode");
            }
        } catch (SQLException ex) {
            Logger.getLogger(ItemManagement.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ItemManagement.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "Error in your Inserted Data.. Please check again..");
            Logger.getLogger(GRNManagement.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(this, "Error in your Inserted Data.. Please check again..");
            Logger.getLogger(DamageManage.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void modifyInItemTable() {
        try {
            String itemCode = imText_ItemId.getText();
            String itemName = imText_ItemName.getText();
            String brandId = imLabelBrandId.getText();
            String description = (String) imCombo_SupplierId.getSelectedItem();
            int itemRe_OrderLevel = Integer.parseInt(imText_ItemReOrder.getText());
            Item item = new Item(brandId, itemCode, itemName, description, itemRe_OrderLevel);
            boolean updateOrNot = ItemController.modifyinItemTable(item);
            if (updateOrNot) {
                JOptionPane.showMessageDialog(this, "Sub Item Update Successfully");
            } else {
                JOptionPane.showMessageDialog(this, "Can't Update Sub Item.. Please Check Your Details");
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ItemManagement.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(ItemManagement.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "Error in your Inserted Data.. Please check again..");
            Logger.getLogger(GRNManagement.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(this, "Error in your Inserted Data.. Please check again..");
            Logger.getLogger(DamageManage.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void removeFromItemTable() {
        String itemCode = imText_ItemId.getText();
        int confirm = JOptionPane.showConfirmDialog(this, "Are you sure??");
        if (confirm == 0) {
            try {
                boolean deleteOrNot = ItemController.removeFromItemTable(itemCode);
                if (deleteOrNot) {
                    JOptionPane.showMessageDialog(this, "Delete Sub Item Successfully..");
                }
            } catch (SQLException ex) {
                Logger.getLogger(ItemManagement.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(ItemManagement.class.getName()).log(Level.SEVERE, null, ex);
            } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(this, "Error in your Inserted Data.. Please check again..");
                Logger.getLogger(GRNManagement.class.getName()).log(Level.SEVERE, null, ex);
            } catch (NullPointerException ex) {
                JOptionPane.showMessageDialog(this, "Error in your Inserted Data.. Please check again..");
                Logger.getLogger(DamageManage.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Sub Item Never Deleted..");
        }
    }

    private void intoItemTable() {
        try {
            String itemCode = imText_ItemId.getText();
            String itemName = imText_ItemName.getText();
            String brandId = imLabelBrandId.getText();
            String description = (String) imCombo_SupplierId.getSelectedItem();
            int itemRe_OrderLevel = Integer.parseInt(imText_ItemReOrder.getText());
            Item item = new Item(brandId, itemCode, itemName, description, itemRe_OrderLevel);
            boolean addOrNot = ItemController.intoItemTable(item);
            if (addOrNot) {
                JOptionPane.showMessageDialog(this, "Sub Item Added Successfully");
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ItemManagement.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(ItemManagement.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "Error in your Inserted Data.. Please check again..");
            Logger.getLogger(GRNManagement.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(this, "Error in your Inserted Data.. Please check again..");
            Logger.getLogger(DamageManage.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void getBrandId() {
        try {
            String brandName = (String) imCombo_BrandName.getSelectedItem();
            String brandId = BrandController.getBrandIdToSelectedBrand(brandName);
            imLabelBrandId.setText(brandId);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ItemManagement.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(ItemManagement.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "Error in your Inserted Data.. Please check again..");
            Logger.getLogger(GRNManagement.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(this, "Error in your Inserted Data.. Please check again..");
            Logger.getLogger(DamageManage.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void getSupplierName() {
        try {
            String supplierId = (String) imCombo_SupplierId.getSelectedItem();
            Supplier supplier = SupplierController.getFromSupplierTable(supplierId);
            imLabelSupplierName.setText(supplier.getSupplierName());
        } catch (SQLException ex) {
            Logger.getLogger(ItemManagement.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ItemManagement.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "Error in your Inserted Data.. Please check again..");
            Logger.getLogger(GRNManagement.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(this, "Error in your Inserted Data.. Please check again..");
            Logger.getLogger(DamageManage.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void setItemCode() {
        try {
            String newItemCode = IDGenerator.getNewID("Item", "itemCode", "SI");
            imText_ItemId.setText(newItemCode);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ItemManagement.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(ItemManagement.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "Error in your Inserted Data.. Please check again..");
            Logger.getLogger(GRNManagement.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(this, "Error in your Inserted Data.. Please check again..");
            Logger.getLogger(DamageManage.class.getName()).log(Level.SEVERE, null, ex);
        }

    }
}
