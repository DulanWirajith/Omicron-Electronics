/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package omicron.view;

import Others.IDGenerator;
import Others.ValidationController;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import omicron.controller.BatchController;
import omicron.controller.BrandController;
import omicron.controller.ItemController;
import omicron.controller.SupplierController;
import omicron.model.Batch;
import omicron.model.Brand;
import omicron.model.Item;
import omicron.model.Supplier;
import omicron.model.Supply_Order;

/**
 *
 * @author Dulan
 */
public class BatchManagement extends javax.swing.JFrame {

    int timeRun = 0;
    Supply_Order order;

    /**
     * Creates new form CustomerManagement
     */
    public BatchManagement() {
        initComponents();
        getclock();
        imAddLabelUpdateOrDelete.setVisible(false);
        showAllItems();
        //imAddLabelGoBack.setVisible(false);
        loadBrandNames();
        loadSubItemNames();
        
        setClearAll();
        loadSupplierIds();
        loadBatchId();
//      imLabelBrandId.setEnabled(false);
        jLabel2.setVisible(false);
        jLabel1.setVisible(false);
        jLabel3.setVisible(false);
        jLabel4.setVisible(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        homePanel = new javax.swing.JPanel();
        homeLabel = new javax.swing.JLabel();
        homeIconPanel = new javax.swing.JPanel();
        titlePanel = new javax.swing.JPanel();
        titleLabel = new javax.swing.JLabel();
        mainButtonPanel = new javax.swing.JPanel();
        closeButtonLabel = new javax.swing.JLabel();
        minimizeButtonLabel = new javax.swing.JLabel();
        tablePanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        imAddTabel_View = new javax.swing.JTable();
        cmCustDetailPanel = new javax.swing.JPanel();
        cmAddPanell_Main = new javax.swing.JPanel();
        cmAddLabel_Main = new javax.swing.JLabel();
        cmAddPanel_GetDetail = new javax.swing.JPanel();
        cmAddLabel_CustId = new javax.swing.JLabel();
        cmAddLabel_CustName = new javax.swing.JLabel();
        imText_ItemName = new javax.swing.JTextField();
        imAddLabelUpdateOrDelete = new javax.swing.JLabel();
        cmAddLabel_CustName2 = new javax.swing.JLabel();
        cmAddLabel_CustName3 = new javax.swing.JLabel();
        imCombo_BrandName = new javax.swing.JComboBox<>();
        imLabelBrandId = new javax.swing.JLabel();
        imLabelBrandId1 = new javax.swing.JLabel();
        cmAddLabel_CustId1 = new javax.swing.JLabel();
        imText_ItemName1 = new javax.swing.JTextField();
        cmAddLabel_CustName4 = new javax.swing.JLabel();
        cmAddLabel_CustName5 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        batchDesc = new javax.swing.JTextArea();
        cmAddLabel_CustName6 = new javax.swing.JLabel();
        imText_BathQty = new javax.swing.JTextField();
        omCombo_BrandDescription = new javax.swing.JComboBox<>();
        cmCustMaintaimPanel = new javax.swing.JPanel();
        imLabel_AddItem = new javax.swing.JLabel();
        imLabel_DeleteItem = new javax.swing.JLabel();
        imLabel_SearchItem = new javax.swing.JLabel();
        imLabel_UpdateItem = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        dateTimePanel = new javax.swing.JPanel();
        clock = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        MainLable = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        homePanel.setOpaque(false);

        homeLabel.setFont(new java.awt.Font("Lucida Bright", 3, 85)); // NOI18N
        homeLabel.setForeground(new java.awt.Color(255, 205, 200));
        homeLabel.setText("  O");

        javax.swing.GroupLayout homePanelLayout = new javax.swing.GroupLayout(homePanel);
        homePanel.setLayout(homePanelLayout);
        homePanelLayout.setHorizontalGroup(
            homePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(homeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
        );
        homePanelLayout.setVerticalGroup(
            homePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(homeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
        );

        getContentPane().add(homePanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 170, 130));

        homeIconPanel.setOpaque(false);

        javax.swing.GroupLayout homeIconPanelLayout = new javax.swing.GroupLayout(homeIconPanel);
        homeIconPanel.setLayout(homeIconPanelLayout);
        homeIconPanelLayout.setHorizontalGroup(
            homeIconPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        homeIconPanelLayout.setVerticalGroup(
            homeIconPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 560, Short.MAX_VALUE)
        );

        getContentPane().add(homeIconPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 210, -1, 560));

        titlePanel.setOpaque(false);

        titleLabel.setFont(new java.awt.Font("Monotype Corsiva", 3, 48)); // NOI18N
        titleLabel.setForeground(new java.awt.Color(255, 255, 0));
        titleLabel.setText("Batch Management...");

        javax.swing.GroupLayout titlePanelLayout = new javax.swing.GroupLayout(titlePanel);
        titlePanel.setLayout(titlePanelLayout);
        titlePanelLayout.setHorizontalGroup(
            titlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(titlePanelLayout.createSequentialGroup()
                .addComponent(titleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 510, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        titlePanelLayout.setVerticalGroup(
            titlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(titlePanelLayout.createSequentialGroup()
                .addComponent(titleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        getContentPane().add(titlePanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 170, 510, 50));

        mainButtonPanel.setOpaque(false);

        closeButtonLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/omicron.images/close_64.png"))); // NOI18N
        closeButtonLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                closeButtonLabelMouseClicked(evt);
            }
        });

        minimizeButtonLabel.setIcon(new javax.swing.ImageIcon("D:\\IJSE\\Project\\First Sem Project\\Omicron\\Omicron\\Omicron_Electronics\\src\\omicron.images\\minimize_64.png")); // NOI18N
        minimizeButtonLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                minimizeButtonLabelMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout mainButtonPanelLayout = new javax.swing.GroupLayout(mainButtonPanel);
        mainButtonPanel.setLayout(mainButtonPanelLayout);
        mainButtonPanelLayout.setHorizontalGroup(
            mainButtonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainButtonPanelLayout.createSequentialGroup()
                .addGap(0, 13, Short.MAX_VALUE)
                .addComponent(minimizeButtonLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(closeButtonLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        mainButtonPanelLayout.setVerticalGroup(
            mainButtonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainButtonPanelLayout.createSequentialGroup()
                .addGroup(mainButtonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(closeButtonLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(minimizeButtonLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        getContentPane().add(mainButtonPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(1230, 0, 130, -1));

        tablePanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(153, 204, 255), new java.awt.Color(153, 255, 255), null, null));
        tablePanel.setOpaque(false);

        imAddTabel_View.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sub Item Name", "Sub Item Code", "BatchId", "Buying Price", "Selling Price", "Descriptiion", "Qty"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        imAddTabel_View.setOpaque(false);
        imAddTabel_View.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                imAddTabel_ViewMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(imAddTabel_View);

        javax.swing.GroupLayout tablePanelLayout = new javax.swing.GroupLayout(tablePanel);
        tablePanel.setLayout(tablePanelLayout);
        tablePanelLayout.setHorizontalGroup(
            tablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 666, Short.MAX_VALUE)
        );
        tablePanelLayout.setVerticalGroup(
            tablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 326, Short.MAX_VALUE)
        );

        getContentPane().add(tablePanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 250, 670, 330));

        cmCustDetailPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        cmCustDetailPanel.setOpaque(false);
        cmCustDetailPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        cmAddPanell_Main.setBackground(new java.awt.Color(255, 0, 153));
        cmAddPanell_Main.setOpaque(false);

        cmAddLabel_Main.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        cmAddLabel_Main.setForeground(new java.awt.Color(255, 255, 255));
        cmAddLabel_Main.setText("Batch Details");

        javax.swing.GroupLayout cmAddPanell_MainLayout = new javax.swing.GroupLayout(cmAddPanell_Main);
        cmAddPanell_Main.setLayout(cmAddPanell_MainLayout);
        cmAddPanell_MainLayout.setHorizontalGroup(
            cmAddPanell_MainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cmAddPanell_MainLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cmAddLabel_Main, javax.swing.GroupLayout.DEFAULT_SIZE, 420, Short.MAX_VALUE)
                .addContainerGap())
        );
        cmAddPanell_MainLayout.setVerticalGroup(
            cmAddPanell_MainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(cmAddLabel_Main, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
        );

        cmCustDetailPanel.add(cmAddPanell_Main, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 440, 50));

        cmAddPanel_GetDetail.setOpaque(false);

        cmAddLabel_CustId.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        cmAddLabel_CustId.setForeground(new java.awt.Color(255, 255, 255));
        cmAddLabel_CustId.setText("Item Name");
        cmAddLabel_CustId.setMaximumSize(new java.awt.Dimension(120, 25));
        cmAddLabel_CustId.setMinimumSize(new java.awt.Dimension(120, 25));

        cmAddLabel_CustName.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        cmAddLabel_CustName.setForeground(new java.awt.Color(255, 255, 255));
        cmAddLabel_CustName.setText("Sub Item Code");
        cmAddLabel_CustName.setMaximumSize(new java.awt.Dimension(120, 25));
        cmAddLabel_CustName.setMinimumSize(new java.awt.Dimension(120, 25));

        imText_ItemName.setBackground(new java.awt.Color(204, 204, 204));
        imText_ItemName.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        imText_ItemName.setText("0");
        imText_ItemName.setMaximumSize(new java.awt.Dimension(120, 25));
        imText_ItemName.setMinimumSize(new java.awt.Dimension(120, 25));
        imText_ItemName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                imText_ItemNameActionPerformed(evt);
            }
        });
        imText_ItemName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                imText_ItemNameKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                imText_ItemNameKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                imText_ItemNameKeyTyped(evt);
            }
        });

        imAddLabelUpdateOrDelete.setBackground(new java.awt.Color(0, 165, 255));
        imAddLabelUpdateOrDelete.setFont(new java.awt.Font("Sylfaen", 3, 24)); // NOI18N
        imAddLabelUpdateOrDelete.setForeground(new java.awt.Color(255, 255, 255));
        imAddLabelUpdateOrDelete.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        imAddLabelUpdateOrDelete.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        imAddLabelUpdateOrDelete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                imAddLabelUpdateOrDeleteMouseClicked(evt);
            }
        });

        cmAddLabel_CustName2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        cmAddLabel_CustName2.setForeground(new java.awt.Color(255, 255, 255));
        cmAddLabel_CustName2.setText("Batch ID");
        cmAddLabel_CustName2.setMaximumSize(new java.awt.Dimension(120, 25));
        cmAddLabel_CustName2.setMinimumSize(new java.awt.Dimension(120, 25));

        cmAddLabel_CustName3.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        cmAddLabel_CustName3.setForeground(new java.awt.Color(255, 255, 255));
        cmAddLabel_CustName3.setText("Buying Price");
        cmAddLabel_CustName3.setMaximumSize(new java.awt.Dimension(120, 25));
        cmAddLabel_CustName3.setMinimumSize(new java.awt.Dimension(120, 25));

        imCombo_BrandName.setBackground(new java.awt.Color(204, 204, 204));
        imCombo_BrandName.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        imCombo_BrandName.setMaximumSize(new java.awt.Dimension(120, 25));
        imCombo_BrandName.setMinimumSize(new java.awt.Dimension(120, 25));
        imCombo_BrandName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                imCombo_BrandNameActionPerformed(evt);
            }
        });

        imLabelBrandId.setBackground(new java.awt.Color(204, 204, 204));
        imLabelBrandId.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        imLabelBrandId.setMaximumSize(new java.awt.Dimension(120, 25));
        imLabelBrandId.setMinimumSize(new java.awt.Dimension(120, 25));
        imLabelBrandId.setOpaque(true);

        imLabelBrandId1.setBackground(new java.awt.Color(204, 204, 204));
        imLabelBrandId1.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        imLabelBrandId1.setMaximumSize(new java.awt.Dimension(120, 25));
        imLabelBrandId1.setMinimumSize(new java.awt.Dimension(120, 25));
        imLabelBrandId1.setOpaque(true);

        cmAddLabel_CustId1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        cmAddLabel_CustId1.setForeground(new java.awt.Color(255, 255, 255));
        cmAddLabel_CustId1.setText("Sub Item Name");
        cmAddLabel_CustId1.setMaximumSize(new java.awt.Dimension(120, 25));
        cmAddLabel_CustId1.setMinimumSize(new java.awt.Dimension(120, 25));

        imText_ItemName1.setBackground(new java.awt.Color(204, 204, 204));
        imText_ItemName1.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        imText_ItemName1.setText("0");
        imText_ItemName1.setMaximumSize(new java.awt.Dimension(120, 25));
        imText_ItemName1.setMinimumSize(new java.awt.Dimension(120, 25));
        imText_ItemName1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                imText_ItemName1ActionPerformed(evt);
            }
        });
        imText_ItemName1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                imText_ItemName1KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                imText_ItemName1KeyTyped(evt);
            }
        });

        cmAddLabel_CustName4.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        cmAddLabel_CustName4.setForeground(new java.awt.Color(255, 255, 255));
        cmAddLabel_CustName4.setText("Selling Price");
        cmAddLabel_CustName4.setMaximumSize(new java.awt.Dimension(120, 25));
        cmAddLabel_CustName4.setMinimumSize(new java.awt.Dimension(120, 25));

        cmAddLabel_CustName5.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        cmAddLabel_CustName5.setForeground(new java.awt.Color(255, 255, 255));
        cmAddLabel_CustName5.setText("Description");
        cmAddLabel_CustName5.setMaximumSize(new java.awt.Dimension(120, 25));
        cmAddLabel_CustName5.setMinimumSize(new java.awt.Dimension(120, 25));

        batchDesc.setColumns(20);
        batchDesc.setRows(5);
        batchDesc.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                batchDescKeyPressed(evt);
            }
        });
        jScrollPane2.setViewportView(batchDesc);

        cmAddLabel_CustName6.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        cmAddLabel_CustName6.setForeground(new java.awt.Color(255, 255, 255));
        cmAddLabel_CustName6.setText("Qty");
        cmAddLabel_CustName6.setMaximumSize(new java.awt.Dimension(120, 25));
        cmAddLabel_CustName6.setMinimumSize(new java.awt.Dimension(120, 25));

        imText_BathQty.setBackground(new java.awt.Color(204, 204, 204));
        imText_BathQty.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        imText_BathQty.setText("0");
        imText_BathQty.setMaximumSize(new java.awt.Dimension(120, 25));
        imText_BathQty.setMinimumSize(new java.awt.Dimension(120, 25));
        imText_BathQty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                imText_BathQtyActionPerformed(evt);
            }
        });
        imText_BathQty.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                imText_BathQtyKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                imText_BathQtyKeyReleased(evt);
            }
        });

        omCombo_BrandDescription.setBackground(new java.awt.Color(204, 204, 204));
        omCombo_BrandDescription.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        omCombo_BrandDescription.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                omCombo_BrandDescriptionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout cmAddPanel_GetDetailLayout = new javax.swing.GroupLayout(cmAddPanel_GetDetail);
        cmAddPanel_GetDetail.setLayout(cmAddPanel_GetDetailLayout);
        cmAddPanel_GetDetailLayout.setHorizontalGroup(
            cmAddPanel_GetDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cmAddPanel_GetDetailLayout.createSequentialGroup()
                .addGroup(cmAddPanel_GetDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(cmAddPanel_GetDetailLayout.createSequentialGroup()
                        .addComponent(cmAddLabel_CustId1, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(omCombo_BrandDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(cmAddPanel_GetDetailLayout.createSequentialGroup()
                        .addGroup(cmAddPanel_GetDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(cmAddPanel_GetDetailLayout.createSequentialGroup()
                                .addGap(315, 315, 315)
                                .addComponent(imAddLabelUpdateOrDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(cmAddPanel_GetDetailLayout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addGroup(cmAddPanel_GetDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, cmAddPanel_GetDetailLayout.createSequentialGroup()
                                        .addComponent(cmAddLabel_CustName4, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                                    .addGroup(cmAddPanel_GetDetailLayout.createSequentialGroup()
                                        .addComponent(cmAddLabel_CustName5, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(8, 8, 8)))
                                .addGroup(cmAddPanel_GetDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jScrollPane2)
                                    .addComponent(imText_ItemName1, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(cmAddPanel_GetDetailLayout.createSequentialGroup()
                                .addComponent(cmAddLabel_CustName6, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(imText_BathQty, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, cmAddPanel_GetDetailLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(cmAddPanel_GetDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, cmAddPanel_GetDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, cmAddPanel_GetDetailLayout.createSequentialGroup()
                                    .addComponent(cmAddLabel_CustId, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(imCombo_BrandName, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(cmAddPanel_GetDetailLayout.createSequentialGroup()
                                    .addComponent(cmAddLabel_CustName, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(imLabelBrandId1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, cmAddPanel_GetDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, cmAddPanel_GetDetailLayout.createSequentialGroup()
                                    .addComponent(cmAddLabel_CustName2, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(imLabelBrandId, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, cmAddPanel_GetDetailLayout.createSequentialGroup()
                                    .addComponent(cmAddLabel_CustName3, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(imText_ItemName, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap())
        );
        cmAddPanel_GetDetailLayout.setVerticalGroup(
            cmAddPanel_GetDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cmAddPanel_GetDetailLayout.createSequentialGroup()
                .addGroup(cmAddPanel_GetDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cmAddLabel_CustId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(imCombo_BrandName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(cmAddPanel_GetDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cmAddLabel_CustId1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(omCombo_BrandDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(cmAddPanel_GetDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cmAddLabel_CustName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(imLabelBrandId1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(cmAddPanel_GetDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cmAddLabel_CustName2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(imLabelBrandId, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(cmAddPanel_GetDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmAddLabel_CustName3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(imText_ItemName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(cmAddPanel_GetDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(imText_ItemName1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmAddLabel_CustName4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(cmAddPanel_GetDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cmAddLabel_CustName5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(cmAddPanel_GetDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmAddLabel_CustName6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(imText_BathQty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addComponent(imAddLabelUpdateOrDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26))
        );

        cmCustDetailPanel.add(cmAddPanel_GetDetail, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 450, 500));

        getContentPane().add(cmCustDetailPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 170, 470, 570));

        cmCustMaintaimPanel.setOpaque(false);

        imLabel_AddItem.setIcon(new javax.swing.ImageIcon("D:\\IJSE\\Project\\First Sem Project\\Omicron\\Omicron\\Omicron_Electronics\\src\\omicron.images\\itemAdd.png")); // NOI18N
        imLabel_AddItem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                imLabel_AddItemMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                imLabel_AddItemMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                imLabel_AddItemMouseExited(evt);
            }
        });

        imLabel_DeleteItem.setIcon(new javax.swing.ImageIcon("D:\\IJSE\\Project\\First Sem Project\\Omicron\\Omicron\\Omicron_Electronics\\src\\omicron.images\\itemRemove.png")); // NOI18N
        imLabel_DeleteItem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                imLabel_DeleteItemMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                imLabel_DeleteItemMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                imLabel_DeleteItemMouseExited(evt);
            }
        });

        imLabel_SearchItem.setIcon(new javax.swing.ImageIcon("D:\\IJSE\\Project\\First Sem Project\\Omicron\\Omicron\\Omicron_Electronics\\src\\omicron.images\\itemSerch.png")); // NOI18N
        imLabel_SearchItem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                imLabel_SearchItemMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                imLabel_SearchItemMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                imLabel_SearchItemMouseExited(evt);
            }
        });

        imLabel_UpdateItem.setIcon(new javax.swing.ImageIcon("D:\\IJSE\\Project\\First Sem Project\\Omicron\\Omicron\\Omicron_Electronics\\src\\omicron.images\\itemUpdate.png")); // NOI18N
        imLabel_UpdateItem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                imLabel_UpdateItemMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                imLabel_UpdateItemMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                imLabel_UpdateItemMouseExited(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(204, 255, 204));
        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 102, 102));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Search");
        jLabel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel2.setBackground(new java.awt.Color(204, 255, 204));
        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 102, 102));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Add");
        jLabel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel3.setBackground(new java.awt.Color(204, 255, 204));
        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 102, 102));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Delete");
        jLabel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel4.setBackground(new java.awt.Color(204, 255, 204));
        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 102, 102));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Update");
        jLabel4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout cmCustMaintaimPanelLayout = new javax.swing.GroupLayout(cmCustMaintaimPanel);
        cmCustMaintaimPanel.setLayout(cmCustMaintaimPanelLayout);
        cmCustMaintaimPanelLayout.setHorizontalGroup(
            cmCustMaintaimPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cmCustMaintaimPanelLayout.createSequentialGroup()
                .addGroup(cmCustMaintaimPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(cmCustMaintaimPanelLayout.createSequentialGroup()
                        .addGroup(cmCustMaintaimPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(imLabel_AddItem)
                            .addComponent(imLabel_DeleteItem)
                            .addComponent(imLabel_SearchItem)
                            .addComponent(imLabel_UpdateItem)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, cmCustMaintaimPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(cmCustMaintaimPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        cmCustMaintaimPanelLayout.setVerticalGroup(
            cmCustMaintaimPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cmCustMaintaimPanelLayout.createSequentialGroup()
                .addComponent(imLabel_AddItem)
                .addGap(2, 2, 2)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(imLabel_SearchItem)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(imLabel_DeleteItem)
                .addGap(2, 2, 2)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(imLabel_UpdateItem)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(cmCustMaintaimPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(1280, 180, 80, 530));

        dateTimePanel.setOpaque(false);

        clock.setFont(new java.awt.Font("DS-Digital", 0, 60)); // NOI18N
        clock.setForeground(new java.awt.Color(0, 165, 255));
        clock.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        clock.setText("2:13:15  PM");

        javax.swing.GroupLayout dateTimePanelLayout = new javax.swing.GroupLayout(dateTimePanel);
        dateTimePanel.setLayout(dateTimePanelLayout);
        dateTimePanelLayout.setHorizontalGroup(
            dateTimePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dateTimePanelLayout.createSequentialGroup()
                .addComponent(clock, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
                .addContainerGap())
        );
        dateTimePanelLayout.setVerticalGroup(
            dateTimePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(clock, javax.swing.GroupLayout.PREFERRED_SIZE, 60, Short.MAX_VALUE)
        );

        getContentPane().add(dateTimePanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 30, 310, 60));

        jButton1.setFont(new java.awt.Font("Miriam Fixed", 1, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(0, 102, 102));
        jButton1.setText("Home");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(593, 690, 140, 40));

        MainLable.setIcon(new javax.swing.ImageIcon("D:\\IJSE\\Project\\First Sem Project\\Omicron\\Omicron\\Omicron_Electronics\\src\\omicron.images\\final.jpg")); // NOI18N
        MainLable.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        getContentPane().add(MainLable, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1370, 770));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void closeButtonLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeButtonLabelMouseClicked
        System.exit(0);
    }//GEN-LAST:event_closeButtonLabelMouseClicked

    private void imText_ItemNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imText_ItemNameActionPerformed
//        
        boolean check = ValidationController.priceText(imText_ItemName);
        if (check) {
            imText_ItemName1.requestFocus();
        }
    }//GEN-LAST:event_imText_ItemNameActionPerformed

    private void imLabel_AddItemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_imLabel_AddItemMouseClicked
        //setClearAll();
        imAddLabelUpdateOrDelete.setText("Add");
        imAddLabelUpdateOrDelete.setVisible(true);

    }//GEN-LAST:event_imLabel_AddItemMouseClicked

    private void imLabel_SearchItemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_imLabel_SearchItemMouseClicked
        setClearAll();
        imAddLabelUpdateOrDelete.setText("OK");
        imAddLabelUpdateOrDelete.setVisible(true);
        searchBatch();
    }//GEN-LAST:event_imLabel_SearchItemMouseClicked

    private void imLabel_UpdateItemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_imLabel_UpdateItemMouseClicked
        setClearAll();
        imAddLabelUpdateOrDelete.setText("Update");
        imAddLabelUpdateOrDelete.setVisible(true);
        searchBatch();

    }//GEN-LAST:event_imLabel_UpdateItemMouseClicked

    private void imLabel_DeleteItemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_imLabel_DeleteItemMouseClicked
        setClearAll();
        imAddLabelUpdateOrDelete.setText("Delete");
        imAddLabelUpdateOrDelete.setVisible(true);
        searchBatch();


    }//GEN-LAST:event_imLabel_DeleteItemMouseClicked

    private void imAddLabelUpdateOrDeleteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_imAddLabelUpdateOrDeleteMouseClicked
        String text = imAddLabelUpdateOrDelete.getText();

//        String batchId = imLabelBrandId.getText();
//        String itemCode = imLabelBrandId1.getText();
//        double buyingPrice = Double.parseDouble(imText_ItemName.getText());
//        double sellingPrice = Double.parseDouble(imText_ItemName1.getText());
//        String desc = batchDesc.getText();
//        int qty = Integer.parseInt(imText_BathQty.getText());
//        if (!(batchId.equals("") && itemCode.equals("") && buyingPrice == 0 && sellingPrice == 0 && desc.equals("") )) {
        if (text.equals("Update")) {

            modifyInBatchTable();

        } else if (text.equals("Delete")) {

            removeFromBatchTable();

        } else if (text.equals("Add")) {

            intoBatchTable();

        }
//        }else{
//            JOptionPane.showMessageDialog(this, "Please Check Your Data Again..");
//        }

        setClearAll();
        showAllItems();
        loadBatchId();
    }//GEN-LAST:event_imAddLabelUpdateOrDeleteMouseClicked

    private void imCombo_BrandNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imCombo_BrandNameActionPerformed
        getItemNames();
    }//GEN-LAST:event_imCombo_BrandNameActionPerformed

    private void imText_ItemName1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imText_ItemName1ActionPerformed
        boolean check = ValidationController.priceText(imText_ItemName1);
        if (check) {
            batchDesc.requestFocus();
        }
    }//GEN-LAST:event_imText_ItemName1ActionPerformed

    private void imText_BathQtyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imText_BathQtyActionPerformed

    }//GEN-LAST:event_imText_BathQtyActionPerformed

    private void omCombo_BrandDescriptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_omCombo_BrandDescriptionActionPerformed
        if (omCombo_BrandDescription.getSelectedItem().toString() != null) {
            getItemCode();
            imText_ItemName.requestFocus();
        }

    }//GEN-LAST:event_omCombo_BrandDescriptionActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        new HomePage().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void batchDescKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_batchDescKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            imText_BathQty.requestFocus();
        }
    }//GEN-LAST:event_batchDescKeyPressed

    private void imText_ItemNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_imText_ItemNameKeyPressed
//        ValidationController.NumbersAndDotOnly(evt);
    }//GEN-LAST:event_imText_ItemNameKeyPressed

    private void imText_ItemNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_imText_ItemNameKeyTyped
        ValidationController.NumbersAndDotOnly(evt);
    }//GEN-LAST:event_imText_ItemNameKeyTyped

    private void imText_ItemNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_imText_ItemNameKeyReleased
//        ValidationController.NumbersAndDotOnly(evt);
    }//GEN-LAST:event_imText_ItemNameKeyReleased

    private void imText_ItemName1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_imText_ItemName1KeyReleased

    }//GEN-LAST:event_imText_ItemName1KeyReleased

    private void imText_BathQtyKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_imText_BathQtyKeyReleased
        ValidationController.vailidateQty(imText_BathQty);
    }//GEN-LAST:event_imText_BathQtyKeyReleased

    private void imLabel_AddItemMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_imLabel_AddItemMouseEntered
        jLabel2.setVisible(true);
    }//GEN-LAST:event_imLabel_AddItemMouseEntered

    private void imLabel_SearchItemMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_imLabel_SearchItemMouseEntered
        jLabel1.setVisible(true);
    }//GEN-LAST:event_imLabel_SearchItemMouseEntered

    private void imLabel_DeleteItemMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_imLabel_DeleteItemMouseEntered
        jLabel3.setVisible(true);
    }//GEN-LAST:event_imLabel_DeleteItemMouseEntered

    private void imLabel_UpdateItemMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_imLabel_UpdateItemMouseEntered
        jLabel4.setVisible(true);
    }//GEN-LAST:event_imLabel_UpdateItemMouseEntered

    private void imLabel_AddItemMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_imLabel_AddItemMouseExited
        jLabel2.setVisible(false);

    }//GEN-LAST:event_imLabel_AddItemMouseExited

    private void imLabel_SearchItemMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_imLabel_SearchItemMouseExited
        jLabel1.setVisible(false);
    }//GEN-LAST:event_imLabel_SearchItemMouseExited

    private void imLabel_DeleteItemMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_imLabel_DeleteItemMouseExited
        jLabel3.setVisible(false);
    }//GEN-LAST:event_imLabel_DeleteItemMouseExited

    private void imLabel_UpdateItemMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_imLabel_UpdateItemMouseExited
        jLabel4.setVisible(false);
    }//GEN-LAST:event_imLabel_UpdateItemMouseExited

    private void imAddTabel_ViewMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_imAddTabel_ViewMouseClicked
//        loadFromTable();
    }//GEN-LAST:event_imAddTabel_ViewMouseClicked

    private void imText_BathQtyKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_imText_BathQtyKeyPressed
        ValidationController.vailidateQty(imText_BathQty);
    }//GEN-LAST:event_imText_BathQtyKeyPressed

    private void imText_ItemName1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_imText_ItemName1KeyTyped
        ValidationController.NumbersAndDotOnly(evt);
    }//GEN-LAST:event_imText_ItemName1KeyTyped

    private void minimizeButtonLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizeButtonLabelMouseClicked
        setState(ICONIFIED);
    }//GEN-LAST:event_minimizeButtonLabelMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BatchManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BatchManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BatchManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BatchManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BatchManagement().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel MainLable;
    private javax.swing.JTextArea batchDesc;
    private javax.swing.JLabel clock;
    private javax.swing.JLabel closeButtonLabel;
    private javax.swing.JLabel cmAddLabel_CustId;
    private javax.swing.JLabel cmAddLabel_CustId1;
    private javax.swing.JLabel cmAddLabel_CustName;
    private javax.swing.JLabel cmAddLabel_CustName2;
    private javax.swing.JLabel cmAddLabel_CustName3;
    private javax.swing.JLabel cmAddLabel_CustName4;
    private javax.swing.JLabel cmAddLabel_CustName5;
    private javax.swing.JLabel cmAddLabel_CustName6;
    private javax.swing.JLabel cmAddLabel_Main;
    private javax.swing.JPanel cmAddPanel_GetDetail;
    private javax.swing.JPanel cmAddPanell_Main;
    private javax.swing.JPanel cmCustDetailPanel;
    private javax.swing.JPanel cmCustMaintaimPanel;
    private javax.swing.JPanel dateTimePanel;
    private javax.swing.JPanel homeIconPanel;
    private javax.swing.JLabel homeLabel;
    private javax.swing.JPanel homePanel;
    private javax.swing.JLabel imAddLabelUpdateOrDelete;
    private javax.swing.JTable imAddTabel_View;
    private javax.swing.JComboBox<String> imCombo_BrandName;
    private javax.swing.JLabel imLabelBrandId;
    private javax.swing.JLabel imLabelBrandId1;
    private javax.swing.JLabel imLabel_AddItem;
    private javax.swing.JLabel imLabel_DeleteItem;
    private javax.swing.JLabel imLabel_SearchItem;
    private javax.swing.JLabel imLabel_UpdateItem;
    private javax.swing.JTextField imText_BathQty;
    private javax.swing.JTextField imText_ItemName;
    private javax.swing.JTextField imText_ItemName1;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel mainButtonPanel;
    private javax.swing.JLabel minimizeButtonLabel;
    private javax.swing.JComboBox<String> omCombo_BrandDescription;
    private javax.swing.JPanel tablePanel;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JPanel titlePanel;
    // End of variables declaration//GEN-END:variables

    private void getclock() {
        new Thread(new Runnable() {
            @Override
            public void run() {
                while (true) {
                    Date curDate = new Date();
                    SimpleDateFormat dateFormat = new SimpleDateFormat("hh:mm:ss aa");
                    String currentTime = dateFormat.format(curDate);

                    clock.setText(currentTime);
                    try {
                        Thread.sleep(1000);
                    } catch (InterruptedException ex) {
//                        JOptionPane.showMessageDialog(RoomDetails.this, "Database Error...");
                    }
                }
            }
        }).start();
    }

    private void setClearAll() {
        imCombo_BrandName.setSelectedItem("");
        // omCombo_BrandDescription.setSelectedItem(itemName);
        imLabelBrandId1.setText("");
        imLabelBrandId.setText("");
        imText_ItemName.setText("");
        imText_ItemName1.setText("");
        batchDesc.setText("");
        imText_BathQty.setText("");
    }

    private void showAllItems() {
        try {
            ArrayList<Batch> allBatchList = BatchController.showFromBatchTable();
            DefaultTableModel defaultTableModel = (DefaultTableModel) imAddTabel_View.getModel();
            defaultTableModel.setRowCount(0);
            for (Batch batch : allBatchList) {
                String itemCode = batch.getItemCode();
                Item item = ItemController.getFromItemTable(itemCode);
                String itemName = item.getItemName();

                String batchId = batch.getBatchId();
                double buyingPrice = batch.getBatchBuyingPrice();
                double sellingPrice = batch.getBatchSellingPrice();
                String desc = batch.getBatchDescription();
                int qty = batch.getBatchQty();

                Object[] rowData = {itemName, itemCode, batchId, buyingPrice, sellingPrice, desc, qty};
                defaultTableModel.addRow(rowData);
            }

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(BatchManagement.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(BatchManagement.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "Error in your Inserted Data.. Please check again..");
            Logger.getLogger(GRNManagement.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(this, "Error in your Inserted Data.. Please check again..");
            Logger.getLogger(DamageManage.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void loadBrandNames() {
        try {
            ArrayList<Brand> allBrandList = BrandController.loadBrandNames();
            for (Brand brand : allBrandList) {
                imCombo_BrandName.addItem(brand.getBrandName());
            }
        } catch (SQLException ex) {
            Logger.getLogger(BatchManagement.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(BatchManagement.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "Error in your Inserted Data.. Please check again..");
            Logger.getLogger(GRNManagement.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(this, "Error in your Inserted Data.. Please check again..");
            Logger.getLogger(DamageManage.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void loadSubItemNames() {

        try {
            ArrayList<Item> allItemDetails = new ArrayList<Item>();
            allItemDetails = ItemController.showFromItemTable();

            for (Item item : allItemDetails) {
                omCombo_BrandDescription.addItem(item.getItemName());

            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(OrderManagement.class
                    .getName()).log(Level.SEVERE, null, ex);

        } catch (SQLException ex) {
            Logger.getLogger(OrderManagement.class
                    .getName()).log(Level.SEVERE, null, ex);
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "Error in your Inserted Data.. Please check again..");
            Logger.getLogger(GRNManagement.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(this, "Error in your Inserted Data.. Please check again..");
            Logger.getLogger(DamageManage.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void loadSupplierIds() {
//        try {
//            ArrayList<Supplier> supplierIds=SupplierController.getSupplierIdsToCombo();
//            for (Supplier supplier : supplierIds) {
//                imCombo_SupplierId.addItem(supplier.getSupplierId());
//            }
//        } catch (ClassNotFoundException ex) {
//            Logger.getLogger(BatchManagement.class.getName()).log(Level.SEVERE, null, ex);
//        } catch (SQLException ex) {
//            Logger.getLogger(BatchManagement.class.getName()).log(Level.SEVERE, null, ex);
//        }
    }

    private void searchBatch() {
        try {
            String batchId = JOptionPane.showInputDialog(this, "Enter Batch Id First...");
            Batch batch = BatchController.getFromBatchTable(batchId);
            if (batch != null) {
                String itemCode = batch.getItemCode();
                Item item = ItemController.getFromItemTable(itemCode);
                String itemName = item.getItemName();
                String brandId = item.getBrandId();
                String brandName = BrandController.getBrandNameToShowAllItems(brandId);

                imCombo_BrandName.setSelectedItem(brandName);
                omCombo_BrandDescription.setSelectedItem(itemName);
                imLabelBrandId1.setText(itemCode);
                imLabelBrandId.setText(batchId);
                imText_ItemName.setText(Double.toString(batch.getBatchBuyingPrice()));
                imText_ItemName1.setText(Double.toString(batch.getBatchSellingPrice()));
                batchDesc.setText(batch.getBatchDescription());
                imText_BathQty.setText(Integer.toString(batch.getBatchQty()));

            } else {
                JOptionPane.showMessageDialog(this, "No Batch Found in " + batchId + " BatchId");
            }
        } catch (SQLException ex) {
            Logger.getLogger(BatchManagement.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(BatchManagement.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "Error in your Inserted Data.. Please check again..");
            Logger.getLogger(GRNManagement.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(this, "Error in your Inserted Data.. Please check again..");
            Logger.getLogger(DamageManage.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void modifyInBatchTable() {
        try {
            String batchId = imLabelBrandId.getText();
            String itemCode = imLabelBrandId1.getText();
            double buyingPrice = Double.parseDouble(imText_ItemName.getText());
            double sellingPrice = Double.parseDouble(imText_ItemName1.getText());
            String desc = batchDesc.getText();
            int qty = Integer.parseInt(imText_BathQty.getText());
            Batch batch = new Batch(itemCode, batchId, buyingPrice, sellingPrice, desc, qty);
            boolean updateOrNot = BatchController.modifyinBatchTable(batch);
            if (updateOrNot) {
                JOptionPane.showMessageDialog(this, "Batch Update Successfully");
            } else {
                JOptionPane.showMessageDialog(this, "Can't Update Batch.. Please Check Your Details");
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(BatchManagement.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(BatchManagement.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "Error in your Inserted Data.. Please check again..");
            Logger.getLogger(GRNManagement.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(this, "Error in your Inserted Data.. Please check again..");
            Logger.getLogger(DamageManage.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void removeFromBatchTable() {
        String batchId = imLabelBrandId.getText();
        int confirm = JOptionPane.showConfirmDialog(this, "Are you sure??");
        if (confirm == 0) {
            try {
                boolean deleteOrNot = BatchController.removeFromBatchTable(batchId);
                if (deleteOrNot) {
                    JOptionPane.showMessageDialog(this, "Delete Batch Successfully..");
                }
            } catch (SQLException ex) {
                Logger.getLogger(BatchManagement.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(BatchManagement.class.getName()).log(Level.SEVERE, null, ex);
            } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(this, "Error in your Inserted Data.. Please check again..");
                Logger.getLogger(GRNManagement.class.getName()).log(Level.SEVERE, null, ex);
            } catch (NullPointerException ex) {
                JOptionPane.showMessageDialog(this, "Error in your Inserted Data.. Please check again..");
                Logger.getLogger(DamageManage.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Batch Never Deleted..");
        }
    }

    private void intoBatchTable() {
        try {
            String batchId = imLabelBrandId.getText();
            String itemCode = imLabelBrandId1.getText();
            double buyingPrice = Double.parseDouble(imText_ItemName.getText());
            double sellingPrice = Double.parseDouble(imText_ItemName1.getText());
            String desc = batchDesc.getText();
            int qty = Integer.parseInt(imText_BathQty.getText());
            Batch batch = new Batch(itemCode, batchId, buyingPrice, sellingPrice, desc, qty);
            boolean addOrNot = BatchController.intoBatchTable(batch);
            if (addOrNot) {
                JOptionPane.showMessageDialog(this, "Sub Item Added Successfully");
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(BatchManagement.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(BatchManagement.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "Error in your Inserted Data.. Please check again..");
            Logger.getLogger(GRNManagement.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(this, "Error in your Inserted Data.. Please check again..");
            Logger.getLogger(DamageManage.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void getItemNames() {
        try {
            String brandName = (String) imCombo_BrandName.getSelectedItem();
            String brandId = BrandController.getBrandIdToSelectedBrand(brandName);
            omCombo_BrandDescription.removeAllItems();
            ArrayList<Item> itemDetails = ItemController.getItemListToBrandId(brandId);
            for (Item itemDetail : itemDetails) {
                omCombo_BrandDescription.addItem(itemDetail.getItemName());
            }

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(BatchManagement.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(BatchManagement.class.getName()).log(Level.SEVERE, null, ex);
        } 
    }

    private void getItemCode() {
        try {
            String itemName = (String) omCombo_BrandDescription.getSelectedItem();
            String itemCode = ItemController.getItemCodeToItemName(itemName);
            imLabelBrandId1.setText(itemCode);

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(BatchManagement.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(BatchManagement.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void loadBatchId() {
        try {
            String newId = IDGenerator.getNewID("Batch", "batchId", "B");
            imLabelBrandId.setText(newId);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(SupplierOrderManagement.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(SupplierOrderManagement.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "Error in your Inserted Data.. Please check again..");
            Logger.getLogger(GRNManagement.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(this, "Error in your Inserted Data.. Please check again..");
            Logger.getLogger(DamageManage.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

//    private void loadFromTable() {
//        int selectedRow = imAddTabel_View.getSelectedRow();
//        DefaultTableModel defaultTableModel = (DefaultTableModel) imAddTabel_View.getModel();
//
//        String itemCode = (String) defaultTableModel.getValueAt(selectedRow, 1);
//        String itemName = (String) defaultTableModel.getValueAt(selectedRow, 0);
//        String batchId = (String) defaultTableModel.getValueAt(selectedRow, 2);
//        double buyingPrice = (double) defaultTableModel.getValueAt(selectedRow, 3);
//        double sellingPrice = (double) defaultTableModel.getValueAt(selectedRow, 4);
//        String desc = (String) defaultTableModel.getValueAt(selectedRow, 5);
//        int qty = (int) defaultTableModel.getValueAt(selectedRow, 6);
//        
//        imCombo_BrandName.setSelectedItem(ABORT);
//    }
}
